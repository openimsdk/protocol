// Copyright Â© 2023 OpenIM. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: jssdk/jssdk.proto

package jssdk

import (
	conversation "github.com/openimsdk/protocol/conversation"
	relation "github.com/openimsdk/protocol/relation"
	sdkws "github.com/openimsdk/protocol/sdkws"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConversationMsg struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Conversation  *conversation.Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation"`
	LastMsg       *sdkws.MsgData             `protobuf:"bytes,2,opt,name=lastMsg,proto3" json:"lastMsg"`
	User          *sdkws.UserInfo            `protobuf:"bytes,3,opt,name=user,proto3" json:"user"`
	Friend        *relation.FriendInfoOnly   `protobuf:"bytes,4,opt,name=friend,proto3" json:"friend"`
	Group         *sdkws.GroupInfo           `protobuf:"bytes,5,opt,name=group,proto3" json:"group"`
	MaxSeq        int64                      `protobuf:"varint,6,opt,name=maxSeq,proto3" json:"maxSeq"`
	ReadSeq       int64                      `protobuf:"varint,7,opt,name=readSeq,proto3" json:"readSeq"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationMsg) Reset() {
	*x = ConversationMsg{}
	mi := &file_jssdk_jssdk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMsg) ProtoMessage() {}

func (x *ConversationMsg) ProtoReflect() protoreflect.Message {
	mi := &file_jssdk_jssdk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMsg.ProtoReflect.Descriptor instead.
func (*ConversationMsg) Descriptor() ([]byte, []int) {
	return file_jssdk_jssdk_proto_rawDescGZIP(), []int{0}
}

func (x *ConversationMsg) GetConversation() *conversation.Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *ConversationMsg) GetLastMsg() *sdkws.MsgData {
	if x != nil {
		return x.LastMsg
	}
	return nil
}

func (x *ConversationMsg) GetUser() *sdkws.UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ConversationMsg) GetFriend() *relation.FriendInfoOnly {
	if x != nil {
		return x.Friend
	}
	return nil
}

func (x *ConversationMsg) GetGroup() *sdkws.GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *ConversationMsg) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *ConversationMsg) GetReadSeq() int64 {
	if x != nil {
		return x.ReadSeq
	}
	return 0
}

type GetActiveConversationsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveConversationsReq) Reset() {
	*x = GetActiveConversationsReq{}
	mi := &file_jssdk_jssdk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveConversationsReq) ProtoMessage() {}

func (x *GetActiveConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_jssdk_jssdk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveConversationsReq.ProtoReflect.Descriptor instead.
func (*GetActiveConversationsReq) Descriptor() ([]byte, []int) {
	return file_jssdk_jssdk_proto_rawDescGZIP(), []int{1}
}

func (x *GetActiveConversationsReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetActiveConversationsReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetActiveConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnreadCount   int64                  `protobuf:"varint,1,opt,name=unreadCount,proto3" json:"unreadCount"`
	Conversations []*ConversationMsg     `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveConversationsResp) Reset() {
	*x = GetActiveConversationsResp{}
	mi := &file_jssdk_jssdk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveConversationsResp) ProtoMessage() {}

func (x *GetActiveConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_jssdk_jssdk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveConversationsResp.ProtoReflect.Descriptor instead.
func (*GetActiveConversationsResp) Descriptor() ([]byte, []int) {
	return file_jssdk_jssdk_proto_rawDescGZIP(), []int{2}
}

func (x *GetActiveConversationsResp) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *GetActiveConversationsResp) GetConversations() []*ConversationMsg {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetConversationsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID     string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	ConversationIDs []string               `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConversationsReq) Reset() {
	*x = GetConversationsReq{}
	mi := &file_jssdk_jssdk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsReq) ProtoMessage() {}

func (x *GetConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_jssdk_jssdk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsReq.ProtoReflect.Descriptor instead.
func (*GetConversationsReq) Descriptor() ([]byte, []int) {
	return file_jssdk_jssdk_proto_rawDescGZIP(), []int{3}
}

func (x *GetConversationsReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetConversationsReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnreadCount   int64                  `protobuf:"varint,1,opt,name=unreadCount,proto3" json:"unreadCount"`
	Conversations []*ConversationMsg     `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsResp) Reset() {
	*x = GetConversationsResp{}
	mi := &file_jssdk_jssdk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsResp) ProtoMessage() {}

func (x *GetConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_jssdk_jssdk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsResp.ProtoReflect.Descriptor instead.
func (*GetConversationsResp) Descriptor() ([]byte, []int) {
	return file_jssdk_jssdk_proto_rawDescGZIP(), []int{4}
}

func (x *GetConversationsResp) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *GetConversationsResp) GetConversations() []*ConversationMsg {
	if x != nil {
		return x.Conversations
	}
	return nil
}

var File_jssdk_jssdk_proto protoreflect.FileDescriptor

const file_jssdk_jssdk_proto_rawDesc = "" +
	"\n" +
	"\x11jssdk/jssdk.proto\x12\fopenim.jssdk\x1a\x11sdkws/sdkws.proto\x1a\x17relation/relation.proto\x1a\x1fconversation/conversation.proto\"\xcf\x02\n" +
	"\x0fConversationMsg\x12E\n" +
	"\fconversation\x18\x01 \x01(\v2!.openim.conversation.ConversationR\fconversation\x12/\n" +
	"\alastMsg\x18\x02 \x01(\v2\x15.openim.sdkws.MsgDataR\alastMsg\x12*\n" +
	"\x04user\x18\x03 \x01(\v2\x16.openim.sdkws.UserInfoR\x04user\x127\n" +
	"\x06friend\x18\x04 \x01(\v2\x1f.openim.relation.FriendInfoOnlyR\x06friend\x12-\n" +
	"\x05group\x18\x05 \x01(\v2\x17.openim.sdkws.GroupInfoR\x05group\x12\x16\n" +
	"\x06maxSeq\x18\x06 \x01(\x03R\x06maxSeq\x12\x18\n" +
	"\areadSeq\x18\a \x01(\x03R\areadSeq\"S\n" +
	"\x19GetActiveConversationsReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"\x83\x01\n" +
	"\x1aGetActiveConversationsResp\x12 \n" +
	"\vunreadCount\x18\x01 \x01(\x03R\vunreadCount\x12C\n" +
	"\rconversations\x18\x02 \x03(\v2\x1d.openim.jssdk.ConversationMsgR\rconversations\"a\n" +
	"\x13GetConversationsReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12(\n" +
	"\x0fconversationIDs\x18\x02 \x03(\tR\x0fconversationIDs\"}\n" +
	"\x14GetConversationsResp\x12 \n" +
	"\vunreadCount\x18\x01 \x01(\x03R\vunreadCount\x12C\n" +
	"\rconversations\x18\x02 \x03(\v2\x1d.openim.jssdk.ConversationMsgR\rconversationsB%Z#github.com/openimsdk/protocol/jssdkb\x06proto3"

var (
	file_jssdk_jssdk_proto_rawDescOnce sync.Once
	file_jssdk_jssdk_proto_rawDescData []byte
)

func file_jssdk_jssdk_proto_rawDescGZIP() []byte {
	file_jssdk_jssdk_proto_rawDescOnce.Do(func() {
		file_jssdk_jssdk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jssdk_jssdk_proto_rawDesc), len(file_jssdk_jssdk_proto_rawDesc)))
	})
	return file_jssdk_jssdk_proto_rawDescData
}

var file_jssdk_jssdk_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_jssdk_jssdk_proto_goTypes = []any{
	(*ConversationMsg)(nil),            // 0: openim.jssdk.ConversationMsg
	(*GetActiveConversationsReq)(nil),  // 1: openim.jssdk.GetActiveConversationsReq
	(*GetActiveConversationsResp)(nil), // 2: openim.jssdk.GetActiveConversationsResp
	(*GetConversationsReq)(nil),        // 3: openim.jssdk.GetConversationsReq
	(*GetConversationsResp)(nil),       // 4: openim.jssdk.GetConversationsResp
	(*conversation.Conversation)(nil),  // 5: openim.conversation.Conversation
	(*sdkws.MsgData)(nil),              // 6: openim.sdkws.MsgData
	(*sdkws.UserInfo)(nil),             // 7: openim.sdkws.UserInfo
	(*relation.FriendInfoOnly)(nil),    // 8: openim.relation.FriendInfoOnly
	(*sdkws.GroupInfo)(nil),            // 9: openim.sdkws.GroupInfo
}
var file_jssdk_jssdk_proto_depIdxs = []int32{
	5, // 0: openim.jssdk.ConversationMsg.conversation:type_name -> openim.conversation.Conversation
	6, // 1: openim.jssdk.ConversationMsg.lastMsg:type_name -> openim.sdkws.MsgData
	7, // 2: openim.jssdk.ConversationMsg.user:type_name -> openim.sdkws.UserInfo
	8, // 3: openim.jssdk.ConversationMsg.friend:type_name -> openim.relation.FriendInfoOnly
	9, // 4: openim.jssdk.ConversationMsg.group:type_name -> openim.sdkws.GroupInfo
	0, // 5: openim.jssdk.GetActiveConversationsResp.conversations:type_name -> openim.jssdk.ConversationMsg
	0, // 6: openim.jssdk.GetConversationsResp.conversations:type_name -> openim.jssdk.ConversationMsg
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_jssdk_jssdk_proto_init() }
func file_jssdk_jssdk_proto_init() {
	if File_jssdk_jssdk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jssdk_jssdk_proto_rawDesc), len(file_jssdk_jssdk_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jssdk_jssdk_proto_goTypes,
		DependencyIndexes: file_jssdk_jssdk_proto_depIdxs,
		MessageInfos:      file_jssdk_jssdk_proto_msgTypes,
	}.Build()
	File_jssdk_jssdk_proto = out.File
	file_jssdk_jssdk_proto_goTypes = nil
	file_jssdk_jssdk_proto_depIdxs = nil
}
