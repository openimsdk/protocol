// Copyright Â© 2023 OpenIM. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: errinfo/errinfo.proto

package errinfo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path"`
	Line          uint32                 `protobuf:"varint,2,opt,name=line,proto3" json:"line"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Cause         string                 `protobuf:"bytes,4,opt,name=cause,proto3" json:"cause"`
	Warp          []string               `protobuf:"bytes,5,rep,name=warp,proto3" json:"warp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_errinfo_errinfo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_errinfo_errinfo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_errinfo_errinfo_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ErrorInfo) GetLine() uint32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *ErrorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ErrorInfo) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *ErrorInfo) GetWarp() []string {
	if x != nil {
		return x.Warp
	}
	return nil
}

var File_errinfo_errinfo_proto protoreflect.FileDescriptor

const file_errinfo_errinfo_proto_rawDesc = "" +
	"\n" +
	"\x15errinfo/errinfo.proto\x12\x0fopenim.protobuf\"q\n" +
	"\tErrorInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04line\x18\x02 \x01(\rR\x04line\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n" +
	"\x05cause\x18\x04 \x01(\tR\x05cause\x12\x12\n" +
	"\x04warp\x18\x05 \x03(\tR\x04warpB'Z%github.com/openimsdk/protocol/errinfob\x06proto3"

var (
	file_errinfo_errinfo_proto_rawDescOnce sync.Once
	file_errinfo_errinfo_proto_rawDescData []byte
)

func file_errinfo_errinfo_proto_rawDescGZIP() []byte {
	file_errinfo_errinfo_proto_rawDescOnce.Do(func() {
		file_errinfo_errinfo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_errinfo_errinfo_proto_rawDesc), len(file_errinfo_errinfo_proto_rawDesc)))
	})
	return file_errinfo_errinfo_proto_rawDescData
}

var file_errinfo_errinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_errinfo_errinfo_proto_goTypes = []any{
	(*ErrorInfo)(nil), // 0: openim.protobuf.ErrorInfo
}
var file_errinfo_errinfo_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_errinfo_errinfo_proto_init() }
func file_errinfo_errinfo_proto_init() {
	if File_errinfo_errinfo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_errinfo_errinfo_proto_rawDesc), len(file_errinfo_errinfo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_errinfo_errinfo_proto_goTypes,
		DependencyIndexes: file_errinfo_errinfo_proto_depIdxs,
		MessageInfos:      file_errinfo_errinfo_proto_msgTypes,
	}.Build()
	File_errinfo_errinfo_proto = out.File
	file_errinfo_errinfo_proto_goTypes = nil
	file_errinfo_errinfo_proto_depIdxs = nil
}
