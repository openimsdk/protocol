// Copyright Â© 2023 OpenIM. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: msg/msg.proto

package msg

import (
	conversation "github.com/openimsdk/protocol/conversation"
	sdkws "github.com/openimsdk/protocol/sdkws"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgDataToMQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
	MsgData       *sdkws.MsgData         `protobuf:"bytes,2,opt,name=msgData,proto3" json:"msgData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgDataToMQ) Reset() {
	*x = MsgDataToMQ{}
	mi := &file_msg_msg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDataToMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataToMQ) ProtoMessage() {}

func (x *MsgDataToMQ) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataToMQ.ProtoReflect.Descriptor instead.
func (*MsgDataToMQ) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{0}
}

func (x *MsgDataToMQ) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MsgDataToMQ) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type MsgDataToDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgData       *sdkws.MsgData         `protobuf:"bytes,1,opt,name=msgData,proto3" json:"msgData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgDataToDB) Reset() {
	*x = MsgDataToDB{}
	mi := &file_msg_msg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDataToDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataToDB) ProtoMessage() {}

func (x *MsgDataToDB) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataToDB.ProtoReflect.Descriptor instead.
func (*MsgDataToDB) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MsgDataToDB) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type PushMsgDataToMQ struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MsgData        *sdkws.MsgData         `protobuf:"bytes,1,opt,name=msgData,proto3" json:"msgData"`
	ConversationID string                 `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PushMsgDataToMQ) Reset() {
	*x = PushMsgDataToMQ{}
	mi := &file_msg_msg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushMsgDataToMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsgDataToMQ) ProtoMessage() {}

func (x *PushMsgDataToMQ) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsgDataToMQ.ProtoReflect.Descriptor instead.
func (*PushMsgDataToMQ) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{2}
}

func (x *PushMsgDataToMQ) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

func (x *PushMsgDataToMQ) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type MsgDataToMongoByMQ struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LastSeq        int64                  `protobuf:"varint,1,opt,name=lastSeq,proto3" json:"lastSeq"`
	ConversationID string                 `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID"`
	MsgData        []*sdkws.MsgData       `protobuf:"bytes,3,rep,name=msgData,proto3" json:"msgData"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MsgDataToMongoByMQ) Reset() {
	*x = MsgDataToMongoByMQ{}
	mi := &file_msg_msg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDataToMongoByMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataToMongoByMQ) ProtoMessage() {}

func (x *MsgDataToMongoByMQ) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataToMongoByMQ.ProtoReflect.Descriptor instead.
func (*MsgDataToMongoByMQ) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{3}
}

func (x *MsgDataToMongoByMQ) GetLastSeq() int64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

func (x *MsgDataToMongoByMQ) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *MsgDataToMongoByMQ) GetMsgData() []*sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type GetMaxAndMinSeqReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMaxAndMinSeqReq) Reset() {
	*x = GetMaxAndMinSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMaxAndMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxAndMinSeqReq) ProtoMessage() {}

func (x *GetMaxAndMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxAndMinSeqReq.ProtoReflect.Descriptor instead.
func (*GetMaxAndMinSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{4}
}

func (x *GetMaxAndMinSeqReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetMaxAndMinSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxSeq        int64                  `protobuf:"varint,1,opt,name=MaxSeq,proto3" json:"MaxSeq"`
	MinSeq        int64                  `protobuf:"varint,2,opt,name=MinSeq,proto3" json:"MinSeq"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMaxAndMinSeqResp) Reset() {
	*x = GetMaxAndMinSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMaxAndMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxAndMinSeqResp) ProtoMessage() {}

func (x *GetMaxAndMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxAndMinSeqResp.ProtoReflect.Descriptor instead.
func (*GetMaxAndMinSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{5}
}

func (x *GetMaxAndMinSeqResp) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *GetMaxAndMinSeqResp) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

type SendMsgReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgData       *sdkws.MsgData         `protobuf:"bytes,3,opt,name=msgData,proto3" json:"msgData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	mi := &file_msg_msg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{6}
}

func (x *SendMsgReq) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type SendMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerMsgID   string                 `protobuf:"bytes,1,opt,name=serverMsgID,proto3" json:"serverMsgID"`
	ClientMsgID   string                 `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID"`
	SendTime      int64                  `protobuf:"varint,3,opt,name=sendTime,proto3" json:"sendTime"`
	Modify        *sdkws.MsgData         `protobuf:"bytes,4,opt,name=modify,proto3" json:"modify"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMsgResp) Reset() {
	*x = SendMsgResp{}
	mi := &file_msg_msg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgResp) ProtoMessage() {}

func (x *SendMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgResp.ProtoReflect.Descriptor instead.
func (*SendMsgResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{7}
}

func (x *SendMsgResp) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *SendMsgResp) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *SendMsgResp) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *SendMsgResp) GetModify() *sdkws.MsgData {
	if x != nil {
		return x.Modify
	}
	return nil
}

type SendSimpleMsgReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgData       *sdkws.MsgData         `protobuf:"bytes,3,opt,name=msgData,proto3" json:"msgData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSimpleMsgReq) Reset() {
	*x = SendSimpleMsgReq{}
	mi := &file_msg_msg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSimpleMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSimpleMsgReq) ProtoMessage() {}

func (x *SendSimpleMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSimpleMsgReq.ProtoReflect.Descriptor instead.
func (*SendSimpleMsgReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{8}
}

func (x *SendSimpleMsgReq) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type SendSimpleMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerMsgID   string                 `protobuf:"bytes,1,opt,name=serverMsgID,proto3" json:"serverMsgID"`
	ClientMsgID   string                 `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID"`
	SendTime      int64                  `protobuf:"varint,3,opt,name=sendTime,proto3" json:"sendTime"`
	Modify        *sdkws.MsgData         `protobuf:"bytes,4,opt,name=modify,proto3" json:"modify"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSimpleMsgResp) Reset() {
	*x = SendSimpleMsgResp{}
	mi := &file_msg_msg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSimpleMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSimpleMsgResp) ProtoMessage() {}

func (x *SendSimpleMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSimpleMsgResp.ProtoReflect.Descriptor instead.
func (*SendSimpleMsgResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{9}
}

func (x *SendSimpleMsgResp) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *SendSimpleMsgResp) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *SendSimpleMsgResp) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *SendSimpleMsgResp) GetModify() *sdkws.MsgData {
	if x != nil {
		return x.Modify
	}
	return nil
}

type SetSendMsgStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSendMsgStatusReq) Reset() {
	*x = SetSendMsgStatusReq{}
	mi := &file_msg_msg_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSendMsgStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSendMsgStatusReq) ProtoMessage() {}

func (x *SetSendMsgStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSendMsgStatusReq.ProtoReflect.Descriptor instead.
func (*SetSendMsgStatusReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{10}
}

func (x *SetSendMsgStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetSendMsgStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSendMsgStatusResp) Reset() {
	*x = SetSendMsgStatusResp{}
	mi := &file_msg_msg_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSendMsgStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSendMsgStatusResp) ProtoMessage() {}

func (x *SetSendMsgStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSendMsgStatusResp.ProtoReflect.Descriptor instead.
func (*SetSendMsgStatusResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{11}
}

type GetSendMsgStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSendMsgStatusReq) Reset() {
	*x = GetSendMsgStatusReq{}
	mi := &file_msg_msg_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSendMsgStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendMsgStatusReq) ProtoMessage() {}

func (x *GetSendMsgStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendMsgStatusReq.ProtoReflect.Descriptor instead.
func (*GetSendMsgStatusReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{12}
}

type GetSendMsgStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSendMsgStatusResp) Reset() {
	*x = GetSendMsgStatusResp{}
	mi := &file_msg_msg_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSendMsgStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendMsgStatusResp) ProtoMessage() {}

func (x *GetSendMsgStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendMsgStatusResp.ProtoReflect.Descriptor instead.
func (*GetSendMsgStatusResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{13}
}

func (x *GetSendMsgStatusResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MsgDataToModifyByMQ struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Messages       []*sdkws.MsgData       `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages"`
	ConversationID string                 `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MsgDataToModifyByMQ) Reset() {
	*x = MsgDataToModifyByMQ{}
	mi := &file_msg_msg_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDataToModifyByMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataToModifyByMQ) ProtoMessage() {}

func (x *MsgDataToModifyByMQ) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataToModifyByMQ.ProtoReflect.Descriptor instead.
func (*MsgDataToModifyByMQ) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{14}
}

func (x *MsgDataToModifyByMQ) GetMessages() []*sdkws.MsgData {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *MsgDataToModifyByMQ) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type DelMsgsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelMsgsReq) Reset() {
	*x = DelMsgsReq{}
	mi := &file_msg_msg_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelMsgsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMsgsReq) ProtoMessage() {}

func (x *DelMsgsReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMsgsReq.ProtoReflect.Descriptor instead.
func (*DelMsgsReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{15}
}

type DelMsgsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelMsgsResp) Reset() {
	*x = DelMsgsResp{}
	mi := &file_msg_msg_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelMsgsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMsgsResp) ProtoMessage() {}

func (x *DelMsgsResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMsgsResp.ProtoReflect.Descriptor instead.
func (*DelMsgsResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{16}
}

type RevokeMsgReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	Seq            int64                  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq"`
	UserID         string                 `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RevokeMsgReq) Reset() {
	*x = RevokeMsgReq{}
	mi := &file_msg_msg_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMsgReq) ProtoMessage() {}

func (x *RevokeMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMsgReq.ProtoReflect.Descriptor instead.
func (*RevokeMsgReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{17}
}

func (x *RevokeMsgReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *RevokeMsgReq) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *RevokeMsgReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type RevokeMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeMsgResp) Reset() {
	*x = RevokeMsgResp{}
	mi := &file_msg_msg_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMsgResp) ProtoMessage() {}

func (x *RevokeMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMsgResp.ProtoReflect.Descriptor instead.
func (*RevokeMsgResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{18}
}

type MarkMsgsAsReadReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	Seqs           []int64                `protobuf:"varint,2,rep,packed,name=seqs,proto3" json:"seqs"`
	UserID         string                 `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkMsgsAsReadReq) Reset() {
	*x = MarkMsgsAsReadReq{}
	mi := &file_msg_msg_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMsgsAsReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMsgsAsReadReq) ProtoMessage() {}

func (x *MarkMsgsAsReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMsgsAsReadReq.ProtoReflect.Descriptor instead.
func (*MarkMsgsAsReadReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{19}
}

func (x *MarkMsgsAsReadReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *MarkMsgsAsReadReq) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

func (x *MarkMsgsAsReadReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type MarkMsgsAsReadResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMsgsAsReadResp) Reset() {
	*x = MarkMsgsAsReadResp{}
	mi := &file_msg_msg_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMsgsAsReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMsgsAsReadResp) ProtoMessage() {}

func (x *MarkMsgsAsReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMsgsAsReadResp.ProtoReflect.Descriptor instead.
func (*MarkMsgsAsReadResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{20}
}

type MarkConversationAsReadReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	UserID         string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	HasReadSeq     int64                  `protobuf:"varint,3,opt,name=hasReadSeq,proto3" json:"hasReadSeq"`
	Seqs           []int64                `protobuf:"varint,4,rep,packed,name=seqs,proto3" json:"seqs"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkConversationAsReadReq) Reset() {
	*x = MarkConversationAsReadReq{}
	mi := &file_msg_msg_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkConversationAsReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkConversationAsReadReq) ProtoMessage() {}

func (x *MarkConversationAsReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkConversationAsReadReq.ProtoReflect.Descriptor instead.
func (*MarkConversationAsReadReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{21}
}

func (x *MarkConversationAsReadReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *MarkConversationAsReadReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MarkConversationAsReadReq) GetHasReadSeq() int64 {
	if x != nil {
		return x.HasReadSeq
	}
	return 0
}

func (x *MarkConversationAsReadReq) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

type MarkConversationAsReadResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkConversationAsReadResp) Reset() {
	*x = MarkConversationAsReadResp{}
	mi := &file_msg_msg_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkConversationAsReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkConversationAsReadResp) ProtoMessage() {}

func (x *MarkConversationAsReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkConversationAsReadResp.ProtoReflect.Descriptor instead.
func (*MarkConversationAsReadResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{22}
}

type SetConversationHasReadSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	UserID         string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	HasReadSeq     int64                  `protobuf:"varint,3,opt,name=hasReadSeq,proto3" json:"hasReadSeq"`
	NoNotification bool                   `protobuf:"varint,4,opt,name=noNotification,proto3" json:"noNotification"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetConversationHasReadSeqReq) Reset() {
	*x = SetConversationHasReadSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationHasReadSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationHasReadSeqReq) ProtoMessage() {}

func (x *SetConversationHasReadSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationHasReadSeqReq.ProtoReflect.Descriptor instead.
func (*SetConversationHasReadSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{23}
}

func (x *SetConversationHasReadSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetConversationHasReadSeqReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetConversationHasReadSeqReq) GetHasReadSeq() int64 {
	if x != nil {
		return x.HasReadSeq
	}
	return 0
}

func (x *SetConversationHasReadSeqReq) GetNoNotification() bool {
	if x != nil {
		return x.NoNotification
	}
	return false
}

type SetConversationHasReadSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationHasReadSeqResp) Reset() {
	*x = SetConversationHasReadSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationHasReadSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationHasReadSeqResp) ProtoMessage() {}

func (x *SetConversationHasReadSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationHasReadSeqResp.ProtoReflect.Descriptor instead.
func (*SetConversationHasReadSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{24}
}

type DeleteSyncOpt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSyncSelf    bool                   `protobuf:"varint,3,opt,name=IsSyncSelf,proto3" json:"IsSyncSelf"`
	IsSyncOther   bool                   `protobuf:"varint,4,opt,name=IsSyncOther,proto3" json:"IsSyncOther"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSyncOpt) Reset() {
	*x = DeleteSyncOpt{}
	mi := &file_msg_msg_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSyncOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSyncOpt) ProtoMessage() {}

func (x *DeleteSyncOpt) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSyncOpt.ProtoReflect.Descriptor instead.
func (*DeleteSyncOpt) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteSyncOpt) GetIsSyncSelf() bool {
	if x != nil {
		return x.IsSyncSelf
	}
	return false
}

func (x *DeleteSyncOpt) GetIsSyncOther() bool {
	if x != nil {
		return x.IsSyncOther
	}
	return false
}

type ClearConversationsMsgReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	UserID          string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	DeleteSyncOpt   *DeleteSyncOpt         `protobuf:"bytes,3,opt,name=deleteSyncOpt,proto3" json:"deleteSyncOpt"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ClearConversationsMsgReq) Reset() {
	*x = ClearConversationsMsgReq{}
	mi := &file_msg_msg_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearConversationsMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationsMsgReq) ProtoMessage() {}

func (x *ClearConversationsMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationsMsgReq.ProtoReflect.Descriptor instead.
func (*ClearConversationsMsgReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{26}
}

func (x *ClearConversationsMsgReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

func (x *ClearConversationsMsgReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ClearConversationsMsgReq) GetDeleteSyncOpt() *DeleteSyncOpt {
	if x != nil {
		return x.DeleteSyncOpt
	}
	return nil
}

type ClearConversationsMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearConversationsMsgResp) Reset() {
	*x = ClearConversationsMsgResp{}
	mi := &file_msg_msg_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearConversationsMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationsMsgResp) ProtoMessage() {}

func (x *ClearConversationsMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationsMsgResp.ProtoReflect.Descriptor instead.
func (*ClearConversationsMsgResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{27}
}

type UserClearAllMsgReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DeleteSyncOpt *DeleteSyncOpt         `protobuf:"bytes,3,opt,name=deleteSyncOpt,proto3" json:"deleteSyncOpt"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserClearAllMsgReq) Reset() {
	*x = UserClearAllMsgReq{}
	mi := &file_msg_msg_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserClearAllMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserClearAllMsgReq) ProtoMessage() {}

func (x *UserClearAllMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserClearAllMsgReq.ProtoReflect.Descriptor instead.
func (*UserClearAllMsgReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{28}
}

func (x *UserClearAllMsgReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserClearAllMsgReq) GetDeleteSyncOpt() *DeleteSyncOpt {
	if x != nil {
		return x.DeleteSyncOpt
	}
	return nil
}

type UserClearAllMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserClearAllMsgResp) Reset() {
	*x = UserClearAllMsgResp{}
	mi := &file_msg_msg_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserClearAllMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserClearAllMsgResp) ProtoMessage() {}

func (x *UserClearAllMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserClearAllMsgResp.ProtoReflect.Descriptor instead.
func (*UserClearAllMsgResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{29}
}

type DeleteMsgsReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	Seqs           []int64                `protobuf:"varint,2,rep,packed,name=seqs,proto3" json:"seqs"`
	UserID         string                 `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
	DeleteSyncOpt  *DeleteSyncOpt         `protobuf:"bytes,4,opt,name=deleteSyncOpt,proto3" json:"deleteSyncOpt"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteMsgsReq) Reset() {
	*x = DeleteMsgsReq{}
	mi := &file_msg_msg_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMsgsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgsReq) ProtoMessage() {}

func (x *DeleteMsgsReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgsReq.ProtoReflect.Descriptor instead.
func (*DeleteMsgsReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteMsgsReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *DeleteMsgsReq) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

func (x *DeleteMsgsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteMsgsReq) GetDeleteSyncOpt() *DeleteSyncOpt {
	if x != nil {
		return x.DeleteSyncOpt
	}
	return nil
}

type DeleteMsgsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMsgsResp) Reset() {
	*x = DeleteMsgsResp{}
	mi := &file_msg_msg_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMsgsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgsResp) ProtoMessage() {}

func (x *DeleteMsgsResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgsResp.ProtoReflect.Descriptor instead.
func (*DeleteMsgsResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{31}
}

type DeleteMsgPhysicalReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	Timestamp       int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteMsgPhysicalReq) Reset() {
	*x = DeleteMsgPhysicalReq{}
	mi := &file_msg_msg_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMsgPhysicalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgPhysicalReq) ProtoMessage() {}

func (x *DeleteMsgPhysicalReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgPhysicalReq.ProtoReflect.Descriptor instead.
func (*DeleteMsgPhysicalReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteMsgPhysicalReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

func (x *DeleteMsgPhysicalReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DeleteMsgPhysicalResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMsgPhysicalResp) Reset() {
	*x = DeleteMsgPhysicalResp{}
	mi := &file_msg_msg_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMsgPhysicalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgPhysicalResp) ProtoMessage() {}

func (x *DeleteMsgPhysicalResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgPhysicalResp.ProtoReflect.Descriptor instead.
func (*DeleteMsgPhysicalResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{33}
}

type DeleteMsgPhysicalBySeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	Seqs           []int64                `protobuf:"varint,2,rep,packed,name=seqs,proto3" json:"seqs"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteMsgPhysicalBySeqReq) Reset() {
	*x = DeleteMsgPhysicalBySeqReq{}
	mi := &file_msg_msg_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMsgPhysicalBySeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgPhysicalBySeqReq) ProtoMessage() {}

func (x *DeleteMsgPhysicalBySeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgPhysicalBySeqReq.ProtoReflect.Descriptor instead.
func (*DeleteMsgPhysicalBySeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteMsgPhysicalBySeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *DeleteMsgPhysicalBySeqReq) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

type DeleteMsgPhysicalBySeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMsgPhysicalBySeqResp) Reset() {
	*x = DeleteMsgPhysicalBySeqResp{}
	mi := &file_msg_msg_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMsgPhysicalBySeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgPhysicalBySeqResp) ProtoMessage() {}

func (x *DeleteMsgPhysicalBySeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgPhysicalBySeqResp.ProtoReflect.Descriptor instead.
func (*DeleteMsgPhysicalBySeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{35}
}

type GetMaxSeqsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMaxSeqsReq) Reset() {
	*x = GetMaxSeqsReq{}
	mi := &file_msg_msg_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMaxSeqsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxSeqsReq) ProtoMessage() {}

func (x *GetMaxSeqsReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxSeqsReq.ProtoReflect.Descriptor instead.
func (*GetMaxSeqsReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{36}
}

func (x *GetMaxSeqsReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetHasReadSeqsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserID          string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	ConversationIDs []string               `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetHasReadSeqsReq) Reset() {
	*x = GetHasReadSeqsReq{}
	mi := &file_msg_msg_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHasReadSeqsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHasReadSeqsReq) ProtoMessage() {}

func (x *GetHasReadSeqsReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHasReadSeqsReq.ProtoReflect.Descriptor instead.
func (*GetHasReadSeqsReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{37}
}

func (x *GetHasReadSeqsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetHasReadSeqsReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type SeqsInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxSeqs       map[string]int64       `protobuf:"bytes,1,rep,name=maxSeqs,proto3" json:"maxSeqs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeqsInfoResp) Reset() {
	*x = SeqsInfoResp{}
	mi := &file_msg_msg_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeqsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqsInfoResp) ProtoMessage() {}

func (x *SeqsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqsInfoResp.ProtoReflect.Descriptor instead.
func (*SeqsInfoResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{38}
}

func (x *SeqsInfoResp) GetMaxSeqs() map[string]int64 {
	if x != nil {
		return x.MaxSeqs
	}
	return nil
}

type GetMsgByConversationIDsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	MaxSeqs         map[string]int64       `protobuf:"bytes,2,rep,name=maxSeqs,proto3" json:"maxSeqs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMsgByConversationIDsReq) Reset() {
	*x = GetMsgByConversationIDsReq{}
	mi := &file_msg_msg_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMsgByConversationIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgByConversationIDsReq) ProtoMessage() {}

func (x *GetMsgByConversationIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgByConversationIDsReq.ProtoReflect.Descriptor instead.
func (*GetMsgByConversationIDsReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{39}
}

func (x *GetMsgByConversationIDsReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

func (x *GetMsgByConversationIDsReq) GetMaxSeqs() map[string]int64 {
	if x != nil {
		return x.MaxSeqs
	}
	return nil
}

type GetMsgByConversationIDsResp struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	MsgDatas      map[string]*sdkws.MsgData `protobuf:"bytes,1,rep,name=msgDatas,proto3" json:"msgDatas" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMsgByConversationIDsResp) Reset() {
	*x = GetMsgByConversationIDsResp{}
	mi := &file_msg_msg_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMsgByConversationIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgByConversationIDsResp) ProtoMessage() {}

func (x *GetMsgByConversationIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgByConversationIDsResp.ProtoReflect.Descriptor instead.
func (*GetMsgByConversationIDsResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{40}
}

func (x *GetMsgByConversationIDsResp) GetMsgDatas() map[string]*sdkws.MsgData {
	if x != nil {
		return x.MsgDatas
	}
	return nil
}

type GetConversationMaxSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationMaxSeqReq) Reset() {
	*x = GetConversationMaxSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMaxSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMaxSeqReq) ProtoMessage() {}

func (x *GetConversationMaxSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMaxSeqReq.ProtoReflect.Descriptor instead.
func (*GetConversationMaxSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{41}
}

func (x *GetConversationMaxSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type GetConversationMaxSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxSeq        int64                  `protobuf:"varint,1,opt,name=maxSeq,proto3" json:"maxSeq"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMaxSeqResp) Reset() {
	*x = GetConversationMaxSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMaxSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMaxSeqResp) ProtoMessage() {}

func (x *GetConversationMaxSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMaxSeqResp.ProtoReflect.Descriptor instead.
func (*GetConversationMaxSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{42}
}

func (x *GetConversationMaxSeqResp) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

type GetConversationsHasReadAndMaxSeqReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserID          string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	ConversationIDs []string               `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	ReturnPinned    bool                   `protobuf:"varint,3,opt,name=returnPinned,proto3" json:"returnPinned"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConversationsHasReadAndMaxSeqReq) Reset() {
	*x = GetConversationsHasReadAndMaxSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsHasReadAndMaxSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsHasReadAndMaxSeqReq) ProtoMessage() {}

func (x *GetConversationsHasReadAndMaxSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsHasReadAndMaxSeqReq.ProtoReflect.Descriptor instead.
func (*GetConversationsHasReadAndMaxSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{43}
}

func (x *GetConversationsHasReadAndMaxSeqReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetConversationsHasReadAndMaxSeqReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

func (x *GetConversationsHasReadAndMaxSeqReq) GetReturnPinned() bool {
	if x != nil {
		return x.ReturnPinned
	}
	return false
}

type Seqs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxSeq        int64                  `protobuf:"varint,1,opt,name=maxSeq,proto3" json:"maxSeq"`
	HasReadSeq    int64                  `protobuf:"varint,2,opt,name=hasReadSeq,proto3" json:"hasReadSeq"`
	MaxSeqTime    int64                  `protobuf:"varint,3,opt,name=maxSeqTime,proto3" json:"maxSeqTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Seqs) Reset() {
	*x = Seqs{}
	mi := &file_msg_msg_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Seqs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seqs) ProtoMessage() {}

func (x *Seqs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seqs.ProtoReflect.Descriptor instead.
func (*Seqs) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{44}
}

func (x *Seqs) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *Seqs) GetHasReadSeq() int64 {
	if x != nil {
		return x.HasReadSeq
	}
	return 0
}

func (x *Seqs) GetMaxSeqTime() int64 {
	if x != nil {
		return x.MaxSeqTime
	}
	return 0
}

type GetConversationsHasReadAndMaxSeqResp struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Seqs                  map[string]*Seqs       `protobuf:"bytes,1,rep,name=seqs,proto3" json:"seqs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PinnedConversationIDs []string               `protobuf:"bytes,2,rep,name=pinnedConversationIDs,proto3" json:"pinnedConversationIDs"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetConversationsHasReadAndMaxSeqResp) Reset() {
	*x = GetConversationsHasReadAndMaxSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsHasReadAndMaxSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsHasReadAndMaxSeqResp) ProtoMessage() {}

func (x *GetConversationsHasReadAndMaxSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsHasReadAndMaxSeqResp.ProtoReflect.Descriptor instead.
func (*GetConversationsHasReadAndMaxSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{45}
}

func (x *GetConversationsHasReadAndMaxSeqResp) GetSeqs() map[string]*Seqs {
	if x != nil {
		return x.Seqs
	}
	return nil
}

func (x *GetConversationsHasReadAndMaxSeqResp) GetPinnedConversationIDs() []string {
	if x != nil {
		return x.PinnedConversationIDs
	}
	return nil
}

type GetActiveUserReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Start         int64                    `protobuf:"varint,1,opt,name=start,proto3" json:"start"`
	End           int64                    `protobuf:"varint,2,opt,name=end,proto3" json:"end"`
	Ase           bool                     `protobuf:"varint,3,opt,name=ase,proto3" json:"ase"`
	Group         bool                     `protobuf:"varint,4,opt,name=group,proto3" json:"group"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveUserReq) Reset() {
	*x = GetActiveUserReq{}
	mi := &file_msg_msg_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveUserReq) ProtoMessage() {}

func (x *GetActiveUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveUserReq.ProtoReflect.Descriptor instead.
func (*GetActiveUserReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{46}
}

func (x *GetActiveUserReq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetActiveUserReq) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetActiveUserReq) GetAse() bool {
	if x != nil {
		return x.Ase
	}
	return false
}

func (x *GetActiveUserReq) GetGroup() bool {
	if x != nil {
		return x.Group
	}
	return false
}

func (x *GetActiveUserReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ActiveUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *sdkws.UserInfo        `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveUser) Reset() {
	*x = ActiveUser{}
	mi := &file_msg_msg_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveUser) ProtoMessage() {}

func (x *ActiveUser) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveUser.ProtoReflect.Descriptor instead.
func (*ActiveUser) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{47}
}

func (x *ActiveUser) GetUser() *sdkws.UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ActiveUser) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetActiveUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgCount      int64                  `protobuf:"varint,1,opt,name=msgCount,proto3" json:"msgCount"`
	UserCount     int64                  `protobuf:"varint,2,opt,name=userCount,proto3" json:"userCount"`
	DateCount     map[string]int64       `protobuf:"bytes,3,rep,name=dateCount,proto3" json:"dateCount" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Users         []*ActiveUser          `protobuf:"bytes,4,rep,name=users,proto3" json:"users"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveUserResp) Reset() {
	*x = GetActiveUserResp{}
	mi := &file_msg_msg_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveUserResp) ProtoMessage() {}

func (x *GetActiveUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveUserResp.ProtoReflect.Descriptor instead.
func (*GetActiveUserResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{48}
}

func (x *GetActiveUserResp) GetMsgCount() int64 {
	if x != nil {
		return x.MsgCount
	}
	return 0
}

func (x *GetActiveUserResp) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *GetActiveUserResp) GetDateCount() map[string]int64 {
	if x != nil {
		return x.DateCount
	}
	return nil
}

func (x *GetActiveUserResp) GetUsers() []*ActiveUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetActiveGroupReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Start         int64                    `protobuf:"varint,1,opt,name=start,proto3" json:"start"`
	End           int64                    `protobuf:"varint,2,opt,name=end,proto3" json:"end"`
	Ase           bool                     `protobuf:"varint,3,opt,name=ase,proto3" json:"ase"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveGroupReq) Reset() {
	*x = GetActiveGroupReq{}
	mi := &file_msg_msg_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveGroupReq) ProtoMessage() {}

func (x *GetActiveGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveGroupReq.ProtoReflect.Descriptor instead.
func (*GetActiveGroupReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{49}
}

func (x *GetActiveGroupReq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetActiveGroupReq) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetActiveGroupReq) GetAse() bool {
	if x != nil {
		return x.Ase
	}
	return false
}

func (x *GetActiveGroupReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ActiveGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         *sdkws.GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveGroup) Reset() {
	*x = ActiveGroup{}
	mi := &file_msg_msg_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveGroup) ProtoMessage() {}

func (x *ActiveGroup) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveGroup.ProtoReflect.Descriptor instead.
func (*ActiveGroup) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{50}
}

func (x *ActiveGroup) GetGroup() *sdkws.GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *ActiveGroup) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetActiveGroupResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgCount      int64                  `protobuf:"varint,1,opt,name=msgCount,proto3" json:"msgCount"`
	GroupCount    int64                  `protobuf:"varint,2,opt,name=groupCount,proto3" json:"groupCount"`
	DateCount     map[string]int64       `protobuf:"bytes,3,rep,name=dateCount,proto3" json:"dateCount" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Groups        []*ActiveGroup         `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveGroupResp) Reset() {
	*x = GetActiveGroupResp{}
	mi := &file_msg_msg_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveGroupResp) ProtoMessage() {}

func (x *GetActiveGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveGroupResp.ProtoReflect.Descriptor instead.
func (*GetActiveGroupResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{51}
}

func (x *GetActiveGroupResp) GetMsgCount() int64 {
	if x != nil {
		return x.MsgCount
	}
	return 0
}

func (x *GetActiveGroupResp) GetGroupCount() int64 {
	if x != nil {
		return x.GroupCount
	}
	return 0
}

func (x *GetActiveGroupResp) GetDateCount() map[string]int64 {
	if x != nil {
		return x.DateCount
	}
	return nil
}

func (x *GetActiveGroupResp) GetGroups() []*ActiveGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SearchMessageReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	SendID        string                   `protobuf:"bytes,1,opt,name=sendID,proto3" json:"sendID"` //åéèID
	RecvID        string                   `protobuf:"bytes,2,opt,name=recvID,proto3" json:"recvID"` //æ¥æ¶èID
	ContentType   int32                    `protobuf:"varint,3,opt,name=contentType,proto3" json:"contentType"`
	SendTime      string                   `protobuf:"bytes,4,opt,name=sendTime,proto3" json:"sendTime"`
	SessionType   int32                    `protobuf:"varint,5,opt,name=sessionType,proto3" json:"sessionType"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMessageReq) Reset() {
	*x = SearchMessageReq{}
	mi := &file_msg_msg_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMessageReq) ProtoMessage() {}

func (x *SearchMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMessageReq.ProtoReflect.Descriptor instead.
func (*SearchMessageReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{52}
}

func (x *SearchMessageReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *SearchMessageReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *SearchMessageReq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *SearchMessageReq) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *SearchMessageReq) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *SearchMessageReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchChatLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatLog       *ChatLog               `protobuf:"bytes,1,opt,name=chatLog,proto3" json:"chatLog"`
	IsRevoked     bool                   `protobuf:"varint,2,opt,name=isRevoked,proto3" json:"isRevoked"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchChatLog) Reset() {
	*x = SearchChatLog{}
	mi := &file_msg_msg_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchChatLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchChatLog) ProtoMessage() {}

func (x *SearchChatLog) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchChatLog.ProtoReflect.Descriptor instead.
func (*SearchChatLog) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{53}
}

func (x *SearchChatLog) GetChatLog() *ChatLog {
	if x != nil {
		return x.ChatLog
	}
	return nil
}

func (x *SearchChatLog) GetIsRevoked() bool {
	if x != nil {
		return x.IsRevoked
	}
	return false
}

type SearchedMsgData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgData       *sdkws.MsgData         `protobuf:"bytes,1,opt,name=msgData,proto3" json:"msgData"`
	IsRevoked     bool                   `protobuf:"varint,2,opt,name=isRevoked,proto3" json:"isRevoked"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchedMsgData) Reset() {
	*x = SearchedMsgData{}
	mi := &file_msg_msg_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchedMsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchedMsgData) ProtoMessage() {}

func (x *SearchedMsgData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchedMsgData.ProtoReflect.Descriptor instead.
func (*SearchedMsgData) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{54}
}

func (x *SearchedMsgData) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

func (x *SearchedMsgData) GetIsRevoked() bool {
	if x != nil {
		return x.IsRevoked
	}
	return false
}

type SearchMessageResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatLogs      []*SearchChatLog       `protobuf:"bytes,1,rep,name=chatLogs,proto3" json:"chatLogs"`
	ChatLogsNum   int32                  `protobuf:"varint,2,opt,name=chatLogsNum,proto3" json:"chatLogsNum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMessageResp) Reset() {
	*x = SearchMessageResp{}
	mi := &file_msg_msg_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMessageResp) ProtoMessage() {}

func (x *SearchMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMessageResp.ProtoReflect.Descriptor instead.
func (*SearchMessageResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{55}
}

func (x *SearchMessageResp) GetChatLogs() []*SearchChatLog {
	if x != nil {
		return x.ChatLogs
	}
	return nil
}

func (x *SearchMessageResp) GetChatLogsNum() int32 {
	if x != nil {
		return x.ChatLogsNum
	}
	return 0
}

type ChatLog struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ServerMsgID      string                 `protobuf:"bytes,1,opt,name=serverMsgID,proto3" json:"serverMsgID"`
	ClientMsgID      string                 `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID"`
	SendID           string                 `protobuf:"bytes,3,opt,name=sendID,proto3" json:"sendID"`
	RecvID           string                 `protobuf:"bytes,4,opt,name=recvID,proto3" json:"recvID"`
	GroupID          string                 `protobuf:"bytes,5,opt,name=groupID,proto3" json:"groupID"`
	RecvNickname     string                 `protobuf:"bytes,6,opt,name=recvNickname,proto3" json:"recvNickname"`
	SenderPlatformID int32                  `protobuf:"varint,7,opt,name=senderPlatformID,proto3" json:"senderPlatformID"`
	SenderNickname   string                 `protobuf:"bytes,8,opt,name=senderNickname,proto3" json:"senderNickname"`
	SenderFaceURL    string                 `protobuf:"bytes,9,opt,name=senderFaceURL,proto3" json:"senderFaceURL"`
	GroupName        string                 `protobuf:"bytes,10,opt,name=groupName,proto3" json:"groupName"`
	SessionType      int32                  `protobuf:"varint,11,opt,name=sessionType,proto3" json:"sessionType"`
	MsgFrom          int32                  `protobuf:"varint,12,opt,name=msgFrom,proto3" json:"msgFrom"`
	ContentType      int32                  `protobuf:"varint,13,opt,name=contentType,proto3" json:"contentType"`
	Content          string                 `protobuf:"bytes,14,opt,name=content,proto3" json:"content"`
	Status           int32                  `protobuf:"varint,15,opt,name=status,proto3" json:"status"`
	SendTime         int64                  `protobuf:"varint,16,opt,name=sendTime,proto3" json:"sendTime"`
	CreateTime       int64                  `protobuf:"varint,17,opt,name=createTime,proto3" json:"createTime"`
	Ex               string                 `protobuf:"bytes,18,opt,name=ex,proto3" json:"ex"`
	GroupFaceURL     string                 `protobuf:"bytes,19,opt,name=groupFaceURL,proto3" json:"groupFaceURL"`
	GroupMemberCount uint32                 `protobuf:"varint,20,opt,name=groupMemberCount,proto3" json:"groupMemberCount"`
	Seq              int64                  `protobuf:"varint,21,opt,name=seq,proto3" json:"seq"`
	GroupOwner       string                 `protobuf:"bytes,22,opt,name=groupOwner,proto3" json:"groupOwner"`
	GroupType        int32                  `protobuf:"varint,23,opt,name=groupType,proto3" json:"groupType"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChatLog) Reset() {
	*x = ChatLog{}
	mi := &file_msg_msg_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLog) ProtoMessage() {}

func (x *ChatLog) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLog.ProtoReflect.Descriptor instead.
func (*ChatLog) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{56}
}

func (x *ChatLog) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *ChatLog) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *ChatLog) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *ChatLog) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *ChatLog) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ChatLog) GetRecvNickname() string {
	if x != nil {
		return x.RecvNickname
	}
	return ""
}

func (x *ChatLog) GetSenderPlatformID() int32 {
	if x != nil {
		return x.SenderPlatformID
	}
	return 0
}

func (x *ChatLog) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *ChatLog) GetSenderFaceURL() string {
	if x != nil {
		return x.SenderFaceURL
	}
	return ""
}

func (x *ChatLog) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ChatLog) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ChatLog) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *ChatLog) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *ChatLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatLog) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ChatLog) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *ChatLog) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ChatLog) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *ChatLog) GetGroupFaceURL() string {
	if x != nil {
		return x.GroupFaceURL
	}
	return ""
}

func (x *ChatLog) GetGroupMemberCount() uint32 {
	if x != nil {
		return x.GroupMemberCount
	}
	return 0
}

func (x *ChatLog) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ChatLog) GetGroupOwner() string {
	if x != nil {
		return x.GroupOwner
	}
	return ""
}

func (x *ChatLog) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

type BatchSendMessageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecvIDList    []string               `protobuf:"bytes,1,rep,name=recvIDList,proto3" json:"recvIDList"`
	MsgData       *sdkws.MsgData         `protobuf:"bytes,2,opt,name=msgData,proto3" json:"msgData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendMessageReq) Reset() {
	*x = BatchSendMessageReq{}
	mi := &file_msg_msg_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendMessageReq) ProtoMessage() {}

func (x *BatchSendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendMessageReq.ProtoReflect.Descriptor instead.
func (*BatchSendMessageReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{57}
}

func (x *BatchSendMessageReq) GetRecvIDList() []string {
	if x != nil {
		return x.RecvIDList
	}
	return nil
}

func (x *BatchSendMessageReq) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type BatchSendMessageResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendMessageResp) Reset() {
	*x = BatchSendMessageResp{}
	mi := &file_msg_msg_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendMessageResp) ProtoMessage() {}

func (x *BatchSendMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendMessageResp.ProtoReflect.Descriptor instead.
func (*BatchSendMessageResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{58}
}

type GetServerTimeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerTimeReq) Reset() {
	*x = GetServerTimeReq{}
	mi := &file_msg_msg_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerTimeReq) ProtoMessage() {}

func (x *GetServerTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerTimeReq.ProtoReflect.Descriptor instead.
func (*GetServerTimeReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{59}
}

type GetServerTimeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerTime    int64                  `protobuf:"varint,1,opt,name=serverTime,proto3" json:"serverTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerTimeResp) Reset() {
	*x = GetServerTimeResp{}
	mi := &file_msg_msg_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerTimeResp) ProtoMessage() {}

func (x *GetServerTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerTimeResp.ProtoReflect.Descriptor instead.
func (*GetServerTimeResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{60}
}

func (x *GetServerTimeResp) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

type ClearMsgReq struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Conversations []*conversation.Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearMsgReq) Reset() {
	*x = ClearMsgReq{}
	mi := &file_msg_msg_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMsgReq) ProtoMessage() {}

func (x *ClearMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMsgReq.ProtoReflect.Descriptor instead.
func (*ClearMsgReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{61}
}

func (x *ClearMsgReq) GetConversations() []*conversation.Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type ClearMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearMsgResp) Reset() {
	*x = ClearMsgResp{}
	mi := &file_msg_msg_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMsgResp) ProtoMessage() {}

func (x *ClearMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMsgResp.ProtoReflect.Descriptor instead.
func (*ClearMsgResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{62}
}

type DestructMsgsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestructMsgsReq) Reset() {
	*x = DestructMsgsReq{}
	mi := &file_msg_msg_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestructMsgsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestructMsgsReq) ProtoMessage() {}

func (x *DestructMsgsReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestructMsgsReq.ProtoReflect.Descriptor instead.
func (*DestructMsgsReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{63}
}

func (x *DestructMsgsReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DestructMsgsReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DestructMsgsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestructMsgsResp) Reset() {
	*x = DestructMsgsResp{}
	mi := &file_msg_msg_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestructMsgsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestructMsgsResp) ProtoMessage() {}

func (x *DestructMsgsResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestructMsgsResp.ProtoReflect.Descriptor instead.
func (*DestructMsgsResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{64}
}

func (x *DestructMsgsResp) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SetUserConversationsMinSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserIDs        []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
	ConversationID string                 `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID"`
	Seq            int64                  `protobuf:"varint,3,opt,name=seq,proto3" json:"seq"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetUserConversationsMinSeqReq) Reset() {
	*x = SetUserConversationsMinSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUserConversationsMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConversationsMinSeqReq) ProtoMessage() {}

func (x *SetUserConversationsMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConversationsMinSeqReq.ProtoReflect.Descriptor instead.
func (*SetUserConversationsMinSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{65}
}

func (x *SetUserConversationsMinSeqReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *SetUserConversationsMinSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetUserConversationsMinSeqReq) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type SetUserConversationsMinSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUserConversationsMinSeqResp) Reset() {
	*x = SetUserConversationsMinSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUserConversationsMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConversationsMinSeqResp) ProtoMessage() {}

func (x *SetUserConversationsMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConversationsMinSeqResp.ProtoReflect.Descriptor instead.
func (*SetUserConversationsMinSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{66}
}

type ConversationSeqs struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID"`
	Seqs           []int64                `protobuf:"varint,3,rep,packed,name=seqs,proto3" json:"seqs"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConversationSeqs) Reset() {
	*x = ConversationSeqs{}
	mi := &file_msg_msg_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationSeqs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationSeqs) ProtoMessage() {}

func (x *ConversationSeqs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationSeqs.ProtoReflect.Descriptor instead.
func (*ConversationSeqs) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{67}
}

func (x *ConversationSeqs) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ConversationSeqs) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

type GetSeqMessageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Conversations []*ConversationSeqs    `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations"`
	Order         sdkws.PullOrder        `protobuf:"varint,3,opt,name=order,proto3,enum=openim.sdkws.PullOrder" json:"order"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeqMessageReq) Reset() {
	*x = GetSeqMessageReq{}
	mi := &file_msg_msg_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeqMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeqMessageReq) ProtoMessage() {}

func (x *GetSeqMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeqMessageReq.ProtoReflect.Descriptor instead.
func (*GetSeqMessageReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{68}
}

func (x *GetSeqMessageReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetSeqMessageReq) GetConversations() []*ConversationSeqs {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *GetSeqMessageReq) GetOrder() sdkws.PullOrder {
	if x != nil {
		return x.Order
	}
	return sdkws.PullOrder(0)
}

type GetSeqMessageResp struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	Msgs             map[string]*sdkws.PullMsgs `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotificationMsgs map[string]*sdkws.PullMsgs `protobuf:"bytes,2,rep,name=notificationMsgs,proto3" json:"notificationMsgs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetSeqMessageResp) Reset() {
	*x = GetSeqMessageResp{}
	mi := &file_msg_msg_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeqMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeqMessageResp) ProtoMessage() {}

func (x *GetSeqMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeqMessageResp.ProtoReflect.Descriptor instead.
func (*GetSeqMessageResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{69}
}

func (x *GetSeqMessageResp) GetMsgs() map[string]*sdkws.PullMsgs {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *GetSeqMessageResp) GetNotificationMsgs() map[string]*sdkws.PullMsgs {
	if x != nil {
		return x.NotificationMsgs
	}
	return nil
}

type GetActiveConversationReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	Limit           int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetActiveConversationReq) Reset() {
	*x = GetActiveConversationReq{}
	mi := &file_msg_msg_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveConversationReq) ProtoMessage() {}

func (x *GetActiveConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveConversationReq.ProtoReflect.Descriptor instead.
func (*GetActiveConversationReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{70}
}

func (x *GetActiveConversationReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

func (x *GetActiveConversationReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ActiveConversation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	LastTime       int64                  `protobuf:"varint,2,opt,name=lastTime,proto3" json:"lastTime"`
	MaxSeq         int64                  `protobuf:"varint,3,opt,name=maxSeq,proto3" json:"maxSeq"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ActiveConversation) Reset() {
	*x = ActiveConversation{}
	mi := &file_msg_msg_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveConversation) ProtoMessage() {}

func (x *ActiveConversation) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveConversation.ProtoReflect.Descriptor instead.
func (*ActiveConversation) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{71}
}

func (x *ActiveConversation) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ActiveConversation) GetLastTime() int64 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

func (x *ActiveConversation) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

type GetActiveConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*ActiveConversation  `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveConversationResp) Reset() {
	*x = GetActiveConversationResp{}
	mi := &file_msg_msg_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveConversationResp) ProtoMessage() {}

func (x *GetActiveConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveConversationResp.ProtoReflect.Descriptor instead.
func (*GetActiveConversationResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{72}
}

func (x *GetActiveConversationResp) GetConversations() []*ActiveConversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type SetUserConversationMaxSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	OwnerUserID    []string               `protobuf:"bytes,2,rep,name=ownerUserID,proto3" json:"ownerUserID"`
	MaxSeq         int64                  `protobuf:"varint,3,opt,name=maxSeq,proto3" json:"maxSeq"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetUserConversationMaxSeqReq) Reset() {
	*x = SetUserConversationMaxSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUserConversationMaxSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConversationMaxSeqReq) ProtoMessage() {}

func (x *SetUserConversationMaxSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConversationMaxSeqReq.ProtoReflect.Descriptor instead.
func (*SetUserConversationMaxSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{73}
}

func (x *SetUserConversationMaxSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetUserConversationMaxSeqReq) GetOwnerUserID() []string {
	if x != nil {
		return x.OwnerUserID
	}
	return nil
}

func (x *SetUserConversationMaxSeqReq) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

type SetUserConversationMaxSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUserConversationMaxSeqResp) Reset() {
	*x = SetUserConversationMaxSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUserConversationMaxSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConversationMaxSeqResp) ProtoMessage() {}

func (x *SetUserConversationMaxSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConversationMaxSeqResp.ProtoReflect.Descriptor instead.
func (*SetUserConversationMaxSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{74}
}

type SetUserConversationMinSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	OwnerUserID    []string               `protobuf:"bytes,2,rep,name=ownerUserID,proto3" json:"ownerUserID"`
	MinSeq         int64                  `protobuf:"varint,3,opt,name=minSeq,proto3" json:"minSeq"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetUserConversationMinSeqReq) Reset() {
	*x = SetUserConversationMinSeqReq{}
	mi := &file_msg_msg_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUserConversationMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConversationMinSeqReq) ProtoMessage() {}

func (x *SetUserConversationMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConversationMinSeqReq.ProtoReflect.Descriptor instead.
func (*SetUserConversationMinSeqReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{75}
}

func (x *SetUserConversationMinSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetUserConversationMinSeqReq) GetOwnerUserID() []string {
	if x != nil {
		return x.OwnerUserID
	}
	return nil
}

func (x *SetUserConversationMinSeqReq) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

type SetUserConversationMinSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUserConversationMinSeqResp) Reset() {
	*x = SetUserConversationMinSeqResp{}
	mi := &file_msg_msg_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUserConversationMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConversationMinSeqResp) ProtoMessage() {}

func (x *SetUserConversationMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConversationMinSeqResp.ProtoReflect.Descriptor instead.
func (*SetUserConversationMinSeqResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{76}
}

type GetLastMessageSeqByTimeReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	Time           int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLastMessageSeqByTimeReq) Reset() {
	*x = GetLastMessageSeqByTimeReq{}
	mi := &file_msg_msg_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastMessageSeqByTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastMessageSeqByTimeReq) ProtoMessage() {}

func (x *GetLastMessageSeqByTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastMessageSeqByTimeReq.ProtoReflect.Descriptor instead.
func (*GetLastMessageSeqByTimeReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{77}
}

func (x *GetLastMessageSeqByTimeReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetLastMessageSeqByTimeReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetLastMessageSeqByTimeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seq           int64                  `protobuf:"varint,1,opt,name=seq,proto3" json:"seq"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLastMessageSeqByTimeResp) Reset() {
	*x = GetLastMessageSeqByTimeResp{}
	mi := &file_msg_msg_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastMessageSeqByTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastMessageSeqByTimeResp) ProtoMessage() {}

func (x *GetLastMessageSeqByTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastMessageSeqByTimeResp.ProtoReflect.Descriptor instead.
func (*GetLastMessageSeqByTimeResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{78}
}

func (x *GetLastMessageSeqByTimeResp) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type GetLastMessageReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserID          string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	ConversationIDs []string               `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetLastMessageReq) Reset() {
	*x = GetLastMessageReq{}
	mi := &file_msg_msg_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastMessageReq) ProtoMessage() {}

func (x *GetLastMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastMessageReq.ProtoReflect.Descriptor instead.
func (*GetLastMessageReq) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{79}
}

func (x *GetLastMessageReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetLastMessageReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetLastMessageResp struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Msgs          map[string]*sdkws.MsgData `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLastMessageResp) Reset() {
	*x = GetLastMessageResp{}
	mi := &file_msg_msg_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastMessageResp) ProtoMessage() {}

func (x *GetLastMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_msg_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastMessageResp.ProtoReflect.Descriptor instead.
func (*GetLastMessageResp) Descriptor() ([]byte, []int) {
	return file_msg_msg_proto_rawDescGZIP(), []int{80}
}

func (x *GetLastMessageResp) GetMsgs() map[string]*sdkws.MsgData {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_msg_msg_proto protoreflect.FileDescriptor

const file_msg_msg_proto_rawDesc = "" +
	"\n" +
	"\rmsg/msg.proto\x12\n" +
	"openim.msg\x1a\x1fconversation/conversation.proto\x1a\x11sdkws/sdkws.proto\"T\n" +
	"\vMsgDataToMQ\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12/\n" +
	"\amsgData\x18\x02 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\">\n" +
	"\vMsgDataToDB\x12/\n" +
	"\amsgData\x18\x01 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\"j\n" +
	"\x0fPushMsgDataToMQ\x12/\n" +
	"\amsgData\x18\x01 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\x12&\n" +
	"\x0econversationID\x18\x02 \x01(\tR\x0econversationID\"\x87\x01\n" +
	"\x12MsgDataToMongoByMQ\x12\x18\n" +
	"\alastSeq\x18\x01 \x01(\x03R\alastSeq\x12&\n" +
	"\x0econversationID\x18\x02 \x01(\tR\x0econversationID\x12/\n" +
	"\amsgData\x18\x03 \x03(\v2\x15.openim.sdkws.MsgDataR\amsgData\",\n" +
	"\x12GetMaxAndMinSeqReq\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\"E\n" +
	"\x13GetMaxAndMinSeqResp\x12\x16\n" +
	"\x06MaxSeq\x18\x01 \x01(\x03R\x06MaxSeq\x12\x16\n" +
	"\x06MinSeq\x18\x02 \x01(\x03R\x06MinSeq\"=\n" +
	"\n" +
	"SendMsgReq\x12/\n" +
	"\amsgData\x18\x03 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\"\x9c\x01\n" +
	"\vSendMsgResp\x12 \n" +
	"\vserverMsgID\x18\x01 \x01(\tR\vserverMsgID\x12 \n" +
	"\vclientMsgID\x18\x02 \x01(\tR\vclientMsgID\x12\x1a\n" +
	"\bsendTime\x18\x03 \x01(\x03R\bsendTime\x12-\n" +
	"\x06modify\x18\x04 \x01(\v2\x15.openim.sdkws.MsgDataR\x06modify\"C\n" +
	"\x10SendSimpleMsgReq\x12/\n" +
	"\amsgData\x18\x03 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\"\xa2\x01\n" +
	"\x11SendSimpleMsgResp\x12 \n" +
	"\vserverMsgID\x18\x01 \x01(\tR\vserverMsgID\x12 \n" +
	"\vclientMsgID\x18\x02 \x01(\tR\vclientMsgID\x12\x1a\n" +
	"\bsendTime\x18\x03 \x01(\x03R\bsendTime\x12-\n" +
	"\x06modify\x18\x04 \x01(\v2\x15.openim.sdkws.MsgDataR\x06modify\"-\n" +
	"\x13SetSendMsgStatusReq\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\"\x16\n" +
	"\x14SetSendMsgStatusResp\"\x15\n" +
	"\x13GetSendMsgStatusReq\".\n" +
	"\x14GetSendMsgStatusResp\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\"p\n" +
	"\x13MsgDataToModifyByMQ\x121\n" +
	"\bmessages\x18\x01 \x03(\v2\x15.openim.sdkws.MsgDataR\bmessages\x12&\n" +
	"\x0econversationID\x18\x02 \x01(\tR\x0econversationID\"\f\n" +
	"\n" +
	"DelMsgsReq\"\r\n" +
	"\vDelMsgsResp\"`\n" +
	"\fRevokeMsgReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x10\n" +
	"\x03seq\x18\x02 \x01(\x03R\x03seq\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\tR\x06userID\"\x0f\n" +
	"\rRevokeMsgResp\"g\n" +
	"\x11MarkMsgsAsReadReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x12\n" +
	"\x04seqs\x18\x02 \x03(\x03R\x04seqs\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\tR\x06userID\"\x14\n" +
	"\x12MarkMsgsAsReadResp\"\x8f\x01\n" +
	"\x19MarkConversationAsReadReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\x12\x1e\n" +
	"\n" +
	"hasReadSeq\x18\x03 \x01(\x03R\n" +
	"hasReadSeq\x12\x12\n" +
	"\x04seqs\x18\x04 \x03(\x03R\x04seqs\"\x1c\n" +
	"\x1aMarkConversationAsReadResp\"\xa6\x01\n" +
	"\x1cSetConversationHasReadSeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\x12\x1e\n" +
	"\n" +
	"hasReadSeq\x18\x03 \x01(\x03R\n" +
	"hasReadSeq\x12&\n" +
	"\x0enoNotification\x18\x04 \x01(\bR\x0enoNotification\"\x1f\n" +
	"\x1dSetConversationHasReadSeqResp\"Q\n" +
	"\rDeleteSyncOpt\x12\x1e\n" +
	"\n" +
	"IsSyncSelf\x18\x03 \x01(\bR\n" +
	"IsSyncSelf\x12 \n" +
	"\vIsSyncOther\x18\x04 \x01(\bR\vIsSyncOther\"\x9d\x01\n" +
	"\x18ClearConversationsMsgReq\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\x12?\n" +
	"\rdeleteSyncOpt\x18\x03 \x01(\v2\x19.openim.msg.DeleteSyncOptR\rdeleteSyncOpt\"\x1b\n" +
	"\x19ClearConversationsMsgResp\"m\n" +
	"\x12UserClearAllMsgReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12?\n" +
	"\rdeleteSyncOpt\x18\x03 \x01(\v2\x19.openim.msg.DeleteSyncOptR\rdeleteSyncOpt\"\x15\n" +
	"\x13UserClearAllMsgResp\"\xa4\x01\n" +
	"\rDeleteMsgsReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x12\n" +
	"\x04seqs\x18\x02 \x03(\x03R\x04seqs\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\tR\x06userID\x12?\n" +
	"\rdeleteSyncOpt\x18\x04 \x01(\v2\x19.openim.msg.DeleteSyncOptR\rdeleteSyncOpt\"\x10\n" +
	"\x0eDeleteMsgsResp\"^\n" +
	"\x14DeleteMsgPhysicalReq\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"\x17\n" +
	"\x15DeleteMsgPhysicalResp\"W\n" +
	"\x19DeleteMsgPhysicalBySeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x12\n" +
	"\x04seqs\x18\x02 \x03(\x03R\x04seqs\"\x1c\n" +
	"\x1aDeleteMsgPhysicalBySeqResp\"9\n" +
	"\rGetMaxSeqsReq\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\"U\n" +
	"\x11GetHasReadSeqsReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12(\n" +
	"\x0fconversationIDs\x18\x02 \x03(\tR\x0fconversationIDs\"\x8b\x01\n" +
	"\fSeqsInfoResp\x12?\n" +
	"\amaxSeqs\x18\x01 \x03(\v2%.openim.msg.SeqsInfoResp.MaxSeqsEntryR\amaxSeqs\x1a:\n" +
	"\fMaxSeqsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xd1\x01\n" +
	"\x1aGetMsgByConversationIDsReq\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\x12M\n" +
	"\amaxSeqs\x18\x02 \x03(\v23.openim.msg.GetMsgByConversationIDsReq.MaxSeqsEntryR\amaxSeqs\x1a:\n" +
	"\fMaxSeqsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xc4\x01\n" +
	"\x1bGetMsgByConversationIDsResp\x12Q\n" +
	"\bmsgDatas\x18\x01 \x03(\v25.openim.msg.GetMsgByConversationIDsResp.MsgDatasEntryR\bmsgDatas\x1aR\n" +
	"\rMsgDatasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.openim.sdkws.MsgDataR\x05value:\x028\x01\"B\n" +
	"\x18GetConversationMaxSeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\"3\n" +
	"\x19GetConversationMaxSeqResp\x12\x16\n" +
	"\x06maxSeq\x18\x01 \x01(\x03R\x06maxSeq\"\x8b\x01\n" +
	"#GetConversationsHasReadAndMaxSeqReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12(\n" +
	"\x0fconversationIDs\x18\x02 \x03(\tR\x0fconversationIDs\x12\"\n" +
	"\freturnPinned\x18\x03 \x01(\bR\freturnPinned\"^\n" +
	"\x04Seqs\x12\x16\n" +
	"\x06maxSeq\x18\x01 \x01(\x03R\x06maxSeq\x12\x1e\n" +
	"\n" +
	"hasReadSeq\x18\x02 \x01(\x03R\n" +
	"hasReadSeq\x12\x1e\n" +
	"\n" +
	"maxSeqTime\x18\x03 \x01(\x03R\n" +
	"maxSeqTime\"\xf7\x01\n" +
	"$GetConversationsHasReadAndMaxSeqResp\x12N\n" +
	"\x04seqs\x18\x01 \x03(\v2:.openim.msg.GetConversationsHasReadAndMaxSeqResp.SeqsEntryR\x04seqs\x124\n" +
	"\x15pinnedConversationIDs\x18\x02 \x03(\tR\x15pinnedConversationIDs\x1aI\n" +
	"\tSeqsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.openim.msg.SeqsR\x05value:\x028\x01\"\xa3\x01\n" +
	"\x10GetActiveUserReq\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x03R\x03end\x12\x10\n" +
	"\x03ase\x18\x03 \x01(\bR\x03ase\x12\x14\n" +
	"\x05group\x18\x04 \x01(\bR\x05group\x12?\n" +
	"\n" +
	"pagination\x18\x05 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\"N\n" +
	"\n" +
	"ActiveUser\x12*\n" +
	"\x04user\x18\x01 \x01(\v2\x16.openim.sdkws.UserInfoR\x04user\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"\x85\x02\n" +
	"\x11GetActiveUserResp\x12\x1a\n" +
	"\bmsgCount\x18\x01 \x01(\x03R\bmsgCount\x12\x1c\n" +
	"\tuserCount\x18\x02 \x01(\x03R\tuserCount\x12J\n" +
	"\tdateCount\x18\x03 \x03(\v2,.openim.msg.GetActiveUserResp.DateCountEntryR\tdateCount\x12,\n" +
	"\x05users\x18\x04 \x03(\v2\x16.openim.msg.ActiveUserR\x05users\x1a<\n" +
	"\x0eDateCountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x8e\x01\n" +
	"\x11GetActiveGroupReq\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x03R\x03end\x12\x10\n" +
	"\x03ase\x18\x03 \x01(\bR\x03ase\x12?\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\"R\n" +
	"\vActiveGroup\x12-\n" +
	"\x05group\x18\x01 \x01(\v2\x17.openim.sdkws.GroupInfoR\x05group\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"\x8c\x02\n" +
	"\x12GetActiveGroupResp\x12\x1a\n" +
	"\bmsgCount\x18\x01 \x01(\x03R\bmsgCount\x12\x1e\n" +
	"\n" +
	"groupCount\x18\x02 \x01(\x03R\n" +
	"groupCount\x12K\n" +
	"\tdateCount\x18\x03 \x03(\v2-.openim.msg.GetActiveGroupResp.DateCountEntryR\tdateCount\x12/\n" +
	"\x06groups\x18\x04 \x03(\v2\x17.openim.msg.ActiveGroupR\x06groups\x1a<\n" +
	"\x0eDateCountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xe3\x01\n" +
	"\x10SearchMessageReq\x12\x16\n" +
	"\x06sendID\x18\x01 \x01(\tR\x06sendID\x12\x16\n" +
	"\x06recvID\x18\x02 \x01(\tR\x06recvID\x12 \n" +
	"\vcontentType\x18\x03 \x01(\x05R\vcontentType\x12\x1a\n" +
	"\bsendTime\x18\x04 \x01(\tR\bsendTime\x12 \n" +
	"\vsessionType\x18\x05 \x01(\x05R\vsessionType\x12?\n" +
	"\n" +
	"pagination\x18\x06 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\"\\\n" +
	"\rSearchChatLog\x12-\n" +
	"\achatLog\x18\x01 \x01(\v2\x13.openim.msg.ChatLogR\achatLog\x12\x1c\n" +
	"\tisRevoked\x18\x02 \x01(\bR\tisRevoked\"`\n" +
	"\x0fSearchedMsgData\x12/\n" +
	"\amsgData\x18\x01 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\x12\x1c\n" +
	"\tisRevoked\x18\x02 \x01(\bR\tisRevoked\"l\n" +
	"\x11SearchMessageResp\x125\n" +
	"\bchatLogs\x18\x01 \x03(\v2\x19.openim.msg.SearchChatLogR\bchatLogs\x12 \n" +
	"\vchatLogsNum\x18\x02 \x01(\x05R\vchatLogsNum\"\xcf\x05\n" +
	"\aChatLog\x12 \n" +
	"\vserverMsgID\x18\x01 \x01(\tR\vserverMsgID\x12 \n" +
	"\vclientMsgID\x18\x02 \x01(\tR\vclientMsgID\x12\x16\n" +
	"\x06sendID\x18\x03 \x01(\tR\x06sendID\x12\x16\n" +
	"\x06recvID\x18\x04 \x01(\tR\x06recvID\x12\x18\n" +
	"\agroupID\x18\x05 \x01(\tR\agroupID\x12\"\n" +
	"\frecvNickname\x18\x06 \x01(\tR\frecvNickname\x12*\n" +
	"\x10senderPlatformID\x18\a \x01(\x05R\x10senderPlatformID\x12&\n" +
	"\x0esenderNickname\x18\b \x01(\tR\x0esenderNickname\x12$\n" +
	"\rsenderFaceURL\x18\t \x01(\tR\rsenderFaceURL\x12\x1c\n" +
	"\tgroupName\x18\n" +
	" \x01(\tR\tgroupName\x12 \n" +
	"\vsessionType\x18\v \x01(\x05R\vsessionType\x12\x18\n" +
	"\amsgFrom\x18\f \x01(\x05R\amsgFrom\x12 \n" +
	"\vcontentType\x18\r \x01(\x05R\vcontentType\x12\x18\n" +
	"\acontent\x18\x0e \x01(\tR\acontent\x12\x16\n" +
	"\x06status\x18\x0f \x01(\x05R\x06status\x12\x1a\n" +
	"\bsendTime\x18\x10 \x01(\x03R\bsendTime\x12\x1e\n" +
	"\n" +
	"createTime\x18\x11 \x01(\x03R\n" +
	"createTime\x12\x0e\n" +
	"\x02ex\x18\x12 \x01(\tR\x02ex\x12\"\n" +
	"\fgroupFaceURL\x18\x13 \x01(\tR\fgroupFaceURL\x12*\n" +
	"\x10groupMemberCount\x18\x14 \x01(\rR\x10groupMemberCount\x12\x10\n" +
	"\x03seq\x18\x15 \x01(\x03R\x03seq\x12\x1e\n" +
	"\n" +
	"groupOwner\x18\x16 \x01(\tR\n" +
	"groupOwner\x12\x1c\n" +
	"\tgroupType\x18\x17 \x01(\x05R\tgroupType\"f\n" +
	"\x13batchSendMessageReq\x12\x1e\n" +
	"\n" +
	"recvIDList\x18\x01 \x03(\tR\n" +
	"recvIDList\x12/\n" +
	"\amsgData\x18\x02 \x01(\v2\x15.openim.sdkws.MsgDataR\amsgData\"\x16\n" +
	"\x14batchSendMessageResp\"\x12\n" +
	"\x10GetServerTimeReq\"3\n" +
	"\x11GetServerTimeResp\x12\x1e\n" +
	"\n" +
	"serverTime\x18\x01 \x01(\x03R\n" +
	"serverTime\"V\n" +
	"\vClearMsgReq\x12G\n" +
	"\rconversations\x18\x01 \x03(\v2!.openim.conversation.ConversationR\rconversations\"\x0e\n" +
	"\fClearMsgResp\"E\n" +
	"\x0fDestructMsgsReq\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"(\n" +
	"\x10DestructMsgsResp\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"s\n" +
	"\x1dSetUserConversationsMinSeqReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\x12&\n" +
	"\x0econversationID\x18\x02 \x01(\tR\x0econversationID\x12\x10\n" +
	"\x03seq\x18\x03 \x01(\x03R\x03seq\" \n" +
	"\x1eSetUserConversationsMinSeqResp\"N\n" +
	"\x10ConversationSeqs\x12&\n" +
	"\x0econversationID\x18\x02 \x01(\tR\x0econversationID\x12\x12\n" +
	"\x04seqs\x18\x03 \x03(\x03R\x04seqs\"\x9d\x01\n" +
	"\x10GetSeqMessageReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12B\n" +
	"\rconversations\x18\x02 \x03(\v2\x1c.openim.msg.ConversationSeqsR\rconversations\x12-\n" +
	"\x05order\x18\x03 \x01(\x0e2\x17.openim.sdkws.PullOrderR\x05order\"\xdf\x02\n" +
	"\x11GetSeqMessageResp\x12;\n" +
	"\x04msgs\x18\x01 \x03(\v2'.openim.msg.GetSeqMessageResp.MsgsEntryR\x04msgs\x12_\n" +
	"\x10notificationMsgs\x18\x02 \x03(\v23.openim.msg.GetSeqMessageResp.NotificationMsgsEntryR\x10notificationMsgs\x1aO\n" +
	"\tMsgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.openim.sdkws.PullMsgsR\x05value:\x028\x01\x1a[\n" +
	"\x15NotificationMsgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.openim.sdkws.PullMsgsR\x05value:\x028\x01\"Z\n" +
	"\x18GetActiveConversationReq\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x03R\x05limit\"p\n" +
	"\x12ActiveConversation\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x1a\n" +
	"\blastTime\x18\x02 \x01(\x03R\blastTime\x12\x16\n" +
	"\x06maxSeq\x18\x03 \x01(\x03R\x06maxSeq\"a\n" +
	"\x19GetActiveConversationResp\x12D\n" +
	"\rconversations\x18\x01 \x03(\v2\x1e.openim.msg.ActiveConversationR\rconversations\"\x80\x01\n" +
	"\x1cSetUserConversationMaxSeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12 \n" +
	"\vownerUserID\x18\x02 \x03(\tR\vownerUserID\x12\x16\n" +
	"\x06maxSeq\x18\x03 \x01(\x03R\x06maxSeq\"\x1f\n" +
	"\x1dSetUserConversationMaxSeqResp\"\x80\x01\n" +
	"\x1cSetUserConversationMinSeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12 \n" +
	"\vownerUserID\x18\x02 \x03(\tR\vownerUserID\x12\x16\n" +
	"\x06minSeq\x18\x03 \x01(\x03R\x06minSeq\"\x1f\n" +
	"\x1dSetUserConversationMinSeqResp\"X\n" +
	"\x1aGetLastMessageSeqByTimeReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\"/\n" +
	"\x1bGetLastMessageSeqByTimeResp\x12\x10\n" +
	"\x03seq\x18\x01 \x01(\x03R\x03seq\"U\n" +
	"\x11GetLastMessageReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12(\n" +
	"\x0fconversationIDs\x18\x02 \x03(\tR\x0fconversationIDs\"\xa2\x01\n" +
	"\x12GetLastMessageResp\x12<\n" +
	"\x04msgs\x18\x01 \x03(\v2(.openim.msg.GetLastMessageResp.MsgsEntryR\x04msgs\x1aN\n" +
	"\tMsgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.openim.sdkws.MsgDataR\x05value:\x028\x012\x88\x17\n" +
	"\x03msg\x12D\n" +
	"\tGetMaxSeq\x12\x1a.openim.sdkws.GetMaxSeqReq\x1a\x1b.openim.sdkws.GetMaxSeqResp\x12A\n" +
	"\n" +
	"GetMaxSeqs\x12\x19.openim.msg.GetMaxSeqsReq\x1a\x18.openim.msg.SeqsInfoResp\x12I\n" +
	"\x0eGetHasReadSeqs\x12\x1d.openim.msg.GetHasReadSeqsReq\x1a\x18.openim.msg.SeqsInfoResp\x12j\n" +
	"\x17GetMsgByConversationIDs\x12&.openim.msg.GetMsgByConversationIDsReq\x1a'.openim.msg.GetMsgByConversationIDsResp\x12d\n" +
	"\x15GetConversationMaxSeq\x12$.openim.msg.GetConversationMaxSeqReq\x1a%.openim.msg.GetConversationMaxSeqResp\x12\\\n" +
	"\x11PullMessageBySeqs\x12\".openim.sdkws.PullMessageBySeqsReq\x1a#.openim.sdkws.PullMessageBySeqsResp\x12L\n" +
	"\rGetSeqMessage\x12\x1c.openim.msg.GetSeqMessageReq\x1a\x1d.openim.msg.GetSeqMessageResp\x12L\n" +
	"\rSearchMessage\x12\x1c.openim.msg.SearchMessageReq\x1a\x1d.openim.msg.SearchMessageResp\x12:\n" +
	"\aSendMsg\x12\x16.openim.msg.SendMsgReq\x1a\x17.openim.msg.SendMsgResp\x12L\n" +
	"\rSendSimpleMsg\x12\x1c.openim.msg.SendSimpleMsgReq\x1a\x1d.openim.msg.SendSimpleMsgResp\x12s\n" +
	"\x1aSetUserConversationsMinSeq\x12).openim.msg.SetUserConversationsMinSeqReq\x1a*.openim.msg.SetUserConversationsMinSeqResp\x12d\n" +
	"\x15ClearConversationsMsg\x12$.openim.msg.ClearConversationsMsgReq\x1a%.openim.msg.ClearConversationsMsgResp\x12R\n" +
	"\x0fUserClearAllMsg\x12\x1e.openim.msg.UserClearAllMsgReq\x1a\x1f.openim.msg.UserClearAllMsgResp\x12C\n" +
	"\n" +
	"DeleteMsgs\x12\x19.openim.msg.DeleteMsgsReq\x1a\x1a.openim.msg.DeleteMsgsResp\x12g\n" +
	"\x16DeleteMsgPhysicalBySeq\x12%.openim.msg.DeleteMsgPhysicalBySeqReq\x1a&.openim.msg.DeleteMsgPhysicalBySeqResp\x12X\n" +
	"\x11DeleteMsgPhysical\x12 .openim.msg.DeleteMsgPhysicalReq\x1a!.openim.msg.DeleteMsgPhysicalResp\x12U\n" +
	"\x10SetSendMsgStatus\x12\x1f.openim.msg.SetSendMsgStatusReq\x1a .openim.msg.SetSendMsgStatusResp\x12U\n" +
	"\x10GetSendMsgStatus\x12\x1f.openim.msg.GetSendMsgStatusReq\x1a .openim.msg.GetSendMsgStatusResp\x12@\n" +
	"\tRevokeMsg\x12\x18.openim.msg.RevokeMsgReq\x1a\x19.openim.msg.RevokeMsgResp\x12O\n" +
	"\x0eMarkMsgsAsRead\x12\x1d.openim.msg.MarkMsgsAsReadReq\x1a\x1e.openim.msg.MarkMsgsAsReadResp\x12g\n" +
	"\x16MarkConversationAsRead\x12%.openim.msg.MarkConversationAsReadReq\x1a&.openim.msg.MarkConversationAsReadResp\x12p\n" +
	"\x19SetConversationHasReadSeq\x12(.openim.msg.SetConversationHasReadSeqReq\x1a).openim.msg.SetConversationHasReadSeqResp\x12\x85\x01\n" +
	" GetConversationsHasReadAndMaxSeq\x12/.openim.msg.GetConversationsHasReadAndMaxSeqReq\x1a0.openim.msg.GetConversationsHasReadAndMaxSeqResp\x12L\n" +
	"\rGetActiveUser\x12\x1c.openim.msg.GetActiveUserReq\x1a\x1d.openim.msg.GetActiveUserResp\x12O\n" +
	"\x0eGetActiveGroup\x12\x1d.openim.msg.GetActiveGroupReq\x1a\x1e.openim.msg.GetActiveGroupResp\x12L\n" +
	"\rGetServerTime\x12\x1c.openim.msg.GetServerTimeReq\x1a\x1d.openim.msg.GetServerTimeResp\x12=\n" +
	"\bClearMsg\x12\x17.openim.msg.ClearMsgReq\x1a\x18.openim.msg.ClearMsgResp\x12I\n" +
	"\fDestructMsgs\x12\x1b.openim.msg.DestructMsgsReq\x1a\x1c.openim.msg.DestructMsgsResp\x12d\n" +
	"\x15GetActiveConversation\x12$.openim.msg.GetActiveConversationReq\x1a%.openim.msg.GetActiveConversationResp\x12p\n" +
	"\x19SetUserConversationMaxSeq\x12(.openim.msg.SetUserConversationMaxSeqReq\x1a).openim.msg.SetUserConversationMaxSeqResp\x12p\n" +
	"\x19SetUserConversationMinSeq\x12(.openim.msg.SetUserConversationMinSeqReq\x1a).openim.msg.SetUserConversationMinSeqResp\x12j\n" +
	"\x17GetLastMessageSeqByTime\x12&.openim.msg.GetLastMessageSeqByTimeReq\x1a'.openim.msg.GetLastMessageSeqByTimeResp\x12O\n" +
	"\x0eGetLastMessage\x12\x1d.openim.msg.GetLastMessageReq\x1a\x1e.openim.msg.GetLastMessageRespB#Z!github.com/openimsdk/protocol/msgb\x06proto3"

var (
	file_msg_msg_proto_rawDescOnce sync.Once
	file_msg_msg_proto_rawDescData []byte
)

func file_msg_msg_proto_rawDescGZIP() []byte {
	file_msg_msg_proto_rawDescOnce.Do(func() {
		file_msg_msg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_msg_msg_proto_rawDesc), len(file_msg_msg_proto_rawDesc)))
	})
	return file_msg_msg_proto_rawDescData
}

var file_msg_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_msg_msg_proto_goTypes = []any{
	(*MsgDataToMQ)(nil),                          // 0: openim.msg.MsgDataToMQ
	(*MsgDataToDB)(nil),                          // 1: openim.msg.MsgDataToDB
	(*PushMsgDataToMQ)(nil),                      // 2: openim.msg.PushMsgDataToMQ
	(*MsgDataToMongoByMQ)(nil),                   // 3: openim.msg.MsgDataToMongoByMQ
	(*GetMaxAndMinSeqReq)(nil),                   // 4: openim.msg.GetMaxAndMinSeqReq
	(*GetMaxAndMinSeqResp)(nil),                  // 5: openim.msg.GetMaxAndMinSeqResp
	(*SendMsgReq)(nil),                           // 6: openim.msg.SendMsgReq
	(*SendMsgResp)(nil),                          // 7: openim.msg.SendMsgResp
	(*SendSimpleMsgReq)(nil),                     // 8: openim.msg.SendSimpleMsgReq
	(*SendSimpleMsgResp)(nil),                    // 9: openim.msg.SendSimpleMsgResp
	(*SetSendMsgStatusReq)(nil),                  // 10: openim.msg.SetSendMsgStatusReq
	(*SetSendMsgStatusResp)(nil),                 // 11: openim.msg.SetSendMsgStatusResp
	(*GetSendMsgStatusReq)(nil),                  // 12: openim.msg.GetSendMsgStatusReq
	(*GetSendMsgStatusResp)(nil),                 // 13: openim.msg.GetSendMsgStatusResp
	(*MsgDataToModifyByMQ)(nil),                  // 14: openim.msg.MsgDataToModifyByMQ
	(*DelMsgsReq)(nil),                           // 15: openim.msg.DelMsgsReq
	(*DelMsgsResp)(nil),                          // 16: openim.msg.DelMsgsResp
	(*RevokeMsgReq)(nil),                         // 17: openim.msg.RevokeMsgReq
	(*RevokeMsgResp)(nil),                        // 18: openim.msg.RevokeMsgResp
	(*MarkMsgsAsReadReq)(nil),                    // 19: openim.msg.MarkMsgsAsReadReq
	(*MarkMsgsAsReadResp)(nil),                   // 20: openim.msg.MarkMsgsAsReadResp
	(*MarkConversationAsReadReq)(nil),            // 21: openim.msg.MarkConversationAsReadReq
	(*MarkConversationAsReadResp)(nil),           // 22: openim.msg.MarkConversationAsReadResp
	(*SetConversationHasReadSeqReq)(nil),         // 23: openim.msg.SetConversationHasReadSeqReq
	(*SetConversationHasReadSeqResp)(nil),        // 24: openim.msg.SetConversationHasReadSeqResp
	(*DeleteSyncOpt)(nil),                        // 25: openim.msg.DeleteSyncOpt
	(*ClearConversationsMsgReq)(nil),             // 26: openim.msg.ClearConversationsMsgReq
	(*ClearConversationsMsgResp)(nil),            // 27: openim.msg.ClearConversationsMsgResp
	(*UserClearAllMsgReq)(nil),                   // 28: openim.msg.UserClearAllMsgReq
	(*UserClearAllMsgResp)(nil),                  // 29: openim.msg.UserClearAllMsgResp
	(*DeleteMsgsReq)(nil),                        // 30: openim.msg.DeleteMsgsReq
	(*DeleteMsgsResp)(nil),                       // 31: openim.msg.DeleteMsgsResp
	(*DeleteMsgPhysicalReq)(nil),                 // 32: openim.msg.DeleteMsgPhysicalReq
	(*DeleteMsgPhysicalResp)(nil),                // 33: openim.msg.DeleteMsgPhysicalResp
	(*DeleteMsgPhysicalBySeqReq)(nil),            // 34: openim.msg.DeleteMsgPhysicalBySeqReq
	(*DeleteMsgPhysicalBySeqResp)(nil),           // 35: openim.msg.DeleteMsgPhysicalBySeqResp
	(*GetMaxSeqsReq)(nil),                        // 36: openim.msg.GetMaxSeqsReq
	(*GetHasReadSeqsReq)(nil),                    // 37: openim.msg.GetHasReadSeqsReq
	(*SeqsInfoResp)(nil),                         // 38: openim.msg.SeqsInfoResp
	(*GetMsgByConversationIDsReq)(nil),           // 39: openim.msg.GetMsgByConversationIDsReq
	(*GetMsgByConversationIDsResp)(nil),          // 40: openim.msg.GetMsgByConversationIDsResp
	(*GetConversationMaxSeqReq)(nil),             // 41: openim.msg.GetConversationMaxSeqReq
	(*GetConversationMaxSeqResp)(nil),            // 42: openim.msg.GetConversationMaxSeqResp
	(*GetConversationsHasReadAndMaxSeqReq)(nil),  // 43: openim.msg.GetConversationsHasReadAndMaxSeqReq
	(*Seqs)(nil),                                 // 44: openim.msg.Seqs
	(*GetConversationsHasReadAndMaxSeqResp)(nil), // 45: openim.msg.GetConversationsHasReadAndMaxSeqResp
	(*GetActiveUserReq)(nil),                     // 46: openim.msg.GetActiveUserReq
	(*ActiveUser)(nil),                           // 47: openim.msg.ActiveUser
	(*GetActiveUserResp)(nil),                    // 48: openim.msg.GetActiveUserResp
	(*GetActiveGroupReq)(nil),                    // 49: openim.msg.GetActiveGroupReq
	(*ActiveGroup)(nil),                          // 50: openim.msg.ActiveGroup
	(*GetActiveGroupResp)(nil),                   // 51: openim.msg.GetActiveGroupResp
	(*SearchMessageReq)(nil),                     // 52: openim.msg.SearchMessageReq
	(*SearchChatLog)(nil),                        // 53: openim.msg.SearchChatLog
	(*SearchedMsgData)(nil),                      // 54: openim.msg.SearchedMsgData
	(*SearchMessageResp)(nil),                    // 55: openim.msg.SearchMessageResp
	(*ChatLog)(nil),                              // 56: openim.msg.ChatLog
	(*BatchSendMessageReq)(nil),                  // 57: openim.msg.batchSendMessageReq
	(*BatchSendMessageResp)(nil),                 // 58: openim.msg.batchSendMessageResp
	(*GetServerTimeReq)(nil),                     // 59: openim.msg.GetServerTimeReq
	(*GetServerTimeResp)(nil),                    // 60: openim.msg.GetServerTimeResp
	(*ClearMsgReq)(nil),                          // 61: openim.msg.ClearMsgReq
	(*ClearMsgResp)(nil),                         // 62: openim.msg.ClearMsgResp
	(*DestructMsgsReq)(nil),                      // 63: openim.msg.DestructMsgsReq
	(*DestructMsgsResp)(nil),                     // 64: openim.msg.DestructMsgsResp
	(*SetUserConversationsMinSeqReq)(nil),        // 65: openim.msg.SetUserConversationsMinSeqReq
	(*SetUserConversationsMinSeqResp)(nil),       // 66: openim.msg.SetUserConversationsMinSeqResp
	(*ConversationSeqs)(nil),                     // 67: openim.msg.ConversationSeqs
	(*GetSeqMessageReq)(nil),                     // 68: openim.msg.GetSeqMessageReq
	(*GetSeqMessageResp)(nil),                    // 69: openim.msg.GetSeqMessageResp
	(*GetActiveConversationReq)(nil),             // 70: openim.msg.GetActiveConversationReq
	(*ActiveConversation)(nil),                   // 71: openim.msg.ActiveConversation
	(*GetActiveConversationResp)(nil),            // 72: openim.msg.GetActiveConversationResp
	(*SetUserConversationMaxSeqReq)(nil),         // 73: openim.msg.SetUserConversationMaxSeqReq
	(*SetUserConversationMaxSeqResp)(nil),        // 74: openim.msg.SetUserConversationMaxSeqResp
	(*SetUserConversationMinSeqReq)(nil),         // 75: openim.msg.SetUserConversationMinSeqReq
	(*SetUserConversationMinSeqResp)(nil),        // 76: openim.msg.SetUserConversationMinSeqResp
	(*GetLastMessageSeqByTimeReq)(nil),           // 77: openim.msg.GetLastMessageSeqByTimeReq
	(*GetLastMessageSeqByTimeResp)(nil),          // 78: openim.msg.GetLastMessageSeqByTimeResp
	(*GetLastMessageReq)(nil),                    // 79: openim.msg.GetLastMessageReq
	(*GetLastMessageResp)(nil),                   // 80: openim.msg.GetLastMessageResp
	nil,                                          // 81: openim.msg.SeqsInfoResp.MaxSeqsEntry
	nil,                                          // 82: openim.msg.GetMsgByConversationIDsReq.MaxSeqsEntry
	nil,                                          // 83: openim.msg.GetMsgByConversationIDsResp.MsgDatasEntry
	nil,                                          // 84: openim.msg.GetConversationsHasReadAndMaxSeqResp.SeqsEntry
	nil,                                          // 85: openim.msg.GetActiveUserResp.DateCountEntry
	nil,                                          // 86: openim.msg.GetActiveGroupResp.DateCountEntry
	nil,                                          // 87: openim.msg.GetSeqMessageResp.MsgsEntry
	nil,                                          // 88: openim.msg.GetSeqMessageResp.NotificationMsgsEntry
	nil,                                          // 89: openim.msg.GetLastMessageResp.MsgsEntry
	(*sdkws.MsgData)(nil),                        // 90: openim.sdkws.MsgData
	(*sdkws.RequestPagination)(nil),              // 91: openim.sdkws.RequestPagination
	(*sdkws.UserInfo)(nil),                       // 92: openim.sdkws.UserInfo
	(*sdkws.GroupInfo)(nil),                      // 93: openim.sdkws.GroupInfo
	(*conversation.Conversation)(nil),            // 94: openim.conversation.Conversation
	(sdkws.PullOrder)(0),                         // 95: openim.sdkws.PullOrder
	(*sdkws.PullMsgs)(nil),                       // 96: openim.sdkws.PullMsgs
	(*sdkws.GetMaxSeqReq)(nil),                   // 97: openim.sdkws.GetMaxSeqReq
	(*sdkws.PullMessageBySeqsReq)(nil),           // 98: openim.sdkws.PullMessageBySeqsReq
	(*sdkws.GetMaxSeqResp)(nil),                  // 99: openim.sdkws.GetMaxSeqResp
	(*sdkws.PullMessageBySeqsResp)(nil),          // 100: openim.sdkws.PullMessageBySeqsResp
}
var file_msg_msg_proto_depIdxs = []int32{
	90,  // 0: openim.msg.MsgDataToMQ.msgData:type_name -> openim.sdkws.MsgData
	90,  // 1: openim.msg.MsgDataToDB.msgData:type_name -> openim.sdkws.MsgData
	90,  // 2: openim.msg.PushMsgDataToMQ.msgData:type_name -> openim.sdkws.MsgData
	90,  // 3: openim.msg.MsgDataToMongoByMQ.msgData:type_name -> openim.sdkws.MsgData
	90,  // 4: openim.msg.SendMsgReq.msgData:type_name -> openim.sdkws.MsgData
	90,  // 5: openim.msg.SendMsgResp.modify:type_name -> openim.sdkws.MsgData
	90,  // 6: openim.msg.SendSimpleMsgReq.msgData:type_name -> openim.sdkws.MsgData
	90,  // 7: openim.msg.SendSimpleMsgResp.modify:type_name -> openim.sdkws.MsgData
	90,  // 8: openim.msg.MsgDataToModifyByMQ.messages:type_name -> openim.sdkws.MsgData
	25,  // 9: openim.msg.ClearConversationsMsgReq.deleteSyncOpt:type_name -> openim.msg.DeleteSyncOpt
	25,  // 10: openim.msg.UserClearAllMsgReq.deleteSyncOpt:type_name -> openim.msg.DeleteSyncOpt
	25,  // 11: openim.msg.DeleteMsgsReq.deleteSyncOpt:type_name -> openim.msg.DeleteSyncOpt
	81,  // 12: openim.msg.SeqsInfoResp.maxSeqs:type_name -> openim.msg.SeqsInfoResp.MaxSeqsEntry
	82,  // 13: openim.msg.GetMsgByConversationIDsReq.maxSeqs:type_name -> openim.msg.GetMsgByConversationIDsReq.MaxSeqsEntry
	83,  // 14: openim.msg.GetMsgByConversationIDsResp.msgDatas:type_name -> openim.msg.GetMsgByConversationIDsResp.MsgDatasEntry
	84,  // 15: openim.msg.GetConversationsHasReadAndMaxSeqResp.seqs:type_name -> openim.msg.GetConversationsHasReadAndMaxSeqResp.SeqsEntry
	91,  // 16: openim.msg.GetActiveUserReq.pagination:type_name -> openim.sdkws.RequestPagination
	92,  // 17: openim.msg.ActiveUser.user:type_name -> openim.sdkws.UserInfo
	85,  // 18: openim.msg.GetActiveUserResp.dateCount:type_name -> openim.msg.GetActiveUserResp.DateCountEntry
	47,  // 19: openim.msg.GetActiveUserResp.users:type_name -> openim.msg.ActiveUser
	91,  // 20: openim.msg.GetActiveGroupReq.pagination:type_name -> openim.sdkws.RequestPagination
	93,  // 21: openim.msg.ActiveGroup.group:type_name -> openim.sdkws.GroupInfo
	86,  // 22: openim.msg.GetActiveGroupResp.dateCount:type_name -> openim.msg.GetActiveGroupResp.DateCountEntry
	50,  // 23: openim.msg.GetActiveGroupResp.groups:type_name -> openim.msg.ActiveGroup
	91,  // 24: openim.msg.SearchMessageReq.pagination:type_name -> openim.sdkws.RequestPagination
	56,  // 25: openim.msg.SearchChatLog.chatLog:type_name -> openim.msg.ChatLog
	90,  // 26: openim.msg.SearchedMsgData.msgData:type_name -> openim.sdkws.MsgData
	53,  // 27: openim.msg.SearchMessageResp.chatLogs:type_name -> openim.msg.SearchChatLog
	90,  // 28: openim.msg.batchSendMessageReq.msgData:type_name -> openim.sdkws.MsgData
	94,  // 29: openim.msg.ClearMsgReq.conversations:type_name -> openim.conversation.Conversation
	67,  // 30: openim.msg.GetSeqMessageReq.conversations:type_name -> openim.msg.ConversationSeqs
	95,  // 31: openim.msg.GetSeqMessageReq.order:type_name -> openim.sdkws.PullOrder
	87,  // 32: openim.msg.GetSeqMessageResp.msgs:type_name -> openim.msg.GetSeqMessageResp.MsgsEntry
	88,  // 33: openim.msg.GetSeqMessageResp.notificationMsgs:type_name -> openim.msg.GetSeqMessageResp.NotificationMsgsEntry
	71,  // 34: openim.msg.GetActiveConversationResp.conversations:type_name -> openim.msg.ActiveConversation
	89,  // 35: openim.msg.GetLastMessageResp.msgs:type_name -> openim.msg.GetLastMessageResp.MsgsEntry
	90,  // 36: openim.msg.GetMsgByConversationIDsResp.MsgDatasEntry.value:type_name -> openim.sdkws.MsgData
	44,  // 37: openim.msg.GetConversationsHasReadAndMaxSeqResp.SeqsEntry.value:type_name -> openim.msg.Seqs
	96,  // 38: openim.msg.GetSeqMessageResp.MsgsEntry.value:type_name -> openim.sdkws.PullMsgs
	96,  // 39: openim.msg.GetSeqMessageResp.NotificationMsgsEntry.value:type_name -> openim.sdkws.PullMsgs
	90,  // 40: openim.msg.GetLastMessageResp.MsgsEntry.value:type_name -> openim.sdkws.MsgData
	97,  // 41: openim.msg.msg.GetMaxSeq:input_type -> openim.sdkws.GetMaxSeqReq
	36,  // 42: openim.msg.msg.GetMaxSeqs:input_type -> openim.msg.GetMaxSeqsReq
	37,  // 43: openim.msg.msg.GetHasReadSeqs:input_type -> openim.msg.GetHasReadSeqsReq
	39,  // 44: openim.msg.msg.GetMsgByConversationIDs:input_type -> openim.msg.GetMsgByConversationIDsReq
	41,  // 45: openim.msg.msg.GetConversationMaxSeq:input_type -> openim.msg.GetConversationMaxSeqReq
	98,  // 46: openim.msg.msg.PullMessageBySeqs:input_type -> openim.sdkws.PullMessageBySeqsReq
	68,  // 47: openim.msg.msg.GetSeqMessage:input_type -> openim.msg.GetSeqMessageReq
	52,  // 48: openim.msg.msg.SearchMessage:input_type -> openim.msg.SearchMessageReq
	6,   // 49: openim.msg.msg.SendMsg:input_type -> openim.msg.SendMsgReq
	8,   // 50: openim.msg.msg.SendSimpleMsg:input_type -> openim.msg.SendSimpleMsgReq
	65,  // 51: openim.msg.msg.SetUserConversationsMinSeq:input_type -> openim.msg.SetUserConversationsMinSeqReq
	26,  // 52: openim.msg.msg.ClearConversationsMsg:input_type -> openim.msg.ClearConversationsMsgReq
	28,  // 53: openim.msg.msg.UserClearAllMsg:input_type -> openim.msg.UserClearAllMsgReq
	30,  // 54: openim.msg.msg.DeleteMsgs:input_type -> openim.msg.DeleteMsgsReq
	34,  // 55: openim.msg.msg.DeleteMsgPhysicalBySeq:input_type -> openim.msg.DeleteMsgPhysicalBySeqReq
	32,  // 56: openim.msg.msg.DeleteMsgPhysical:input_type -> openim.msg.DeleteMsgPhysicalReq
	10,  // 57: openim.msg.msg.SetSendMsgStatus:input_type -> openim.msg.SetSendMsgStatusReq
	12,  // 58: openim.msg.msg.GetSendMsgStatus:input_type -> openim.msg.GetSendMsgStatusReq
	17,  // 59: openim.msg.msg.RevokeMsg:input_type -> openim.msg.RevokeMsgReq
	19,  // 60: openim.msg.msg.MarkMsgsAsRead:input_type -> openim.msg.MarkMsgsAsReadReq
	21,  // 61: openim.msg.msg.MarkConversationAsRead:input_type -> openim.msg.MarkConversationAsReadReq
	23,  // 62: openim.msg.msg.SetConversationHasReadSeq:input_type -> openim.msg.SetConversationHasReadSeqReq
	43,  // 63: openim.msg.msg.GetConversationsHasReadAndMaxSeq:input_type -> openim.msg.GetConversationsHasReadAndMaxSeqReq
	46,  // 64: openim.msg.msg.GetActiveUser:input_type -> openim.msg.GetActiveUserReq
	49,  // 65: openim.msg.msg.GetActiveGroup:input_type -> openim.msg.GetActiveGroupReq
	59,  // 66: openim.msg.msg.GetServerTime:input_type -> openim.msg.GetServerTimeReq
	61,  // 67: openim.msg.msg.ClearMsg:input_type -> openim.msg.ClearMsgReq
	63,  // 68: openim.msg.msg.DestructMsgs:input_type -> openim.msg.DestructMsgsReq
	70,  // 69: openim.msg.msg.GetActiveConversation:input_type -> openim.msg.GetActiveConversationReq
	73,  // 70: openim.msg.msg.SetUserConversationMaxSeq:input_type -> openim.msg.SetUserConversationMaxSeqReq
	75,  // 71: openim.msg.msg.SetUserConversationMinSeq:input_type -> openim.msg.SetUserConversationMinSeqReq
	77,  // 72: openim.msg.msg.GetLastMessageSeqByTime:input_type -> openim.msg.GetLastMessageSeqByTimeReq
	79,  // 73: openim.msg.msg.GetLastMessage:input_type -> openim.msg.GetLastMessageReq
	99,  // 74: openim.msg.msg.GetMaxSeq:output_type -> openim.sdkws.GetMaxSeqResp
	38,  // 75: openim.msg.msg.GetMaxSeqs:output_type -> openim.msg.SeqsInfoResp
	38,  // 76: openim.msg.msg.GetHasReadSeqs:output_type -> openim.msg.SeqsInfoResp
	40,  // 77: openim.msg.msg.GetMsgByConversationIDs:output_type -> openim.msg.GetMsgByConversationIDsResp
	42,  // 78: openim.msg.msg.GetConversationMaxSeq:output_type -> openim.msg.GetConversationMaxSeqResp
	100, // 79: openim.msg.msg.PullMessageBySeqs:output_type -> openim.sdkws.PullMessageBySeqsResp
	69,  // 80: openim.msg.msg.GetSeqMessage:output_type -> openim.msg.GetSeqMessageResp
	55,  // 81: openim.msg.msg.SearchMessage:output_type -> openim.msg.SearchMessageResp
	7,   // 82: openim.msg.msg.SendMsg:output_type -> openim.msg.SendMsgResp
	9,   // 83: openim.msg.msg.SendSimpleMsg:output_type -> openim.msg.SendSimpleMsgResp
	66,  // 84: openim.msg.msg.SetUserConversationsMinSeq:output_type -> openim.msg.SetUserConversationsMinSeqResp
	27,  // 85: openim.msg.msg.ClearConversationsMsg:output_type -> openim.msg.ClearConversationsMsgResp
	29,  // 86: openim.msg.msg.UserClearAllMsg:output_type -> openim.msg.UserClearAllMsgResp
	31,  // 87: openim.msg.msg.DeleteMsgs:output_type -> openim.msg.DeleteMsgsResp
	35,  // 88: openim.msg.msg.DeleteMsgPhysicalBySeq:output_type -> openim.msg.DeleteMsgPhysicalBySeqResp
	33,  // 89: openim.msg.msg.DeleteMsgPhysical:output_type -> openim.msg.DeleteMsgPhysicalResp
	11,  // 90: openim.msg.msg.SetSendMsgStatus:output_type -> openim.msg.SetSendMsgStatusResp
	13,  // 91: openim.msg.msg.GetSendMsgStatus:output_type -> openim.msg.GetSendMsgStatusResp
	18,  // 92: openim.msg.msg.RevokeMsg:output_type -> openim.msg.RevokeMsgResp
	20,  // 93: openim.msg.msg.MarkMsgsAsRead:output_type -> openim.msg.MarkMsgsAsReadResp
	22,  // 94: openim.msg.msg.MarkConversationAsRead:output_type -> openim.msg.MarkConversationAsReadResp
	24,  // 95: openim.msg.msg.SetConversationHasReadSeq:output_type -> openim.msg.SetConversationHasReadSeqResp
	45,  // 96: openim.msg.msg.GetConversationsHasReadAndMaxSeq:output_type -> openim.msg.GetConversationsHasReadAndMaxSeqResp
	48,  // 97: openim.msg.msg.GetActiveUser:output_type -> openim.msg.GetActiveUserResp
	51,  // 98: openim.msg.msg.GetActiveGroup:output_type -> openim.msg.GetActiveGroupResp
	60,  // 99: openim.msg.msg.GetServerTime:output_type -> openim.msg.GetServerTimeResp
	62,  // 100: openim.msg.msg.ClearMsg:output_type -> openim.msg.ClearMsgResp
	64,  // 101: openim.msg.msg.DestructMsgs:output_type -> openim.msg.DestructMsgsResp
	72,  // 102: openim.msg.msg.GetActiveConversation:output_type -> openim.msg.GetActiveConversationResp
	74,  // 103: openim.msg.msg.SetUserConversationMaxSeq:output_type -> openim.msg.SetUserConversationMaxSeqResp
	76,  // 104: openim.msg.msg.SetUserConversationMinSeq:output_type -> openim.msg.SetUserConversationMinSeqResp
	78,  // 105: openim.msg.msg.GetLastMessageSeqByTime:output_type -> openim.msg.GetLastMessageSeqByTimeResp
	80,  // 106: openim.msg.msg.GetLastMessage:output_type -> openim.msg.GetLastMessageResp
	74,  // [74:107] is the sub-list for method output_type
	41,  // [41:74] is the sub-list for method input_type
	41,  // [41:41] is the sub-list for extension type_name
	41,  // [41:41] is the sub-list for extension extendee
	0,   // [0:41] is the sub-list for field type_name
}

func init() { file_msg_msg_proto_init() }
func file_msg_msg_proto_init() {
	if File_msg_msg_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_msg_msg_proto_rawDesc), len(file_msg_msg_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msg_msg_proto_goTypes,
		DependencyIndexes: file_msg_msg_proto_depIdxs,
		MessageInfos:      file_msg_msg_proto_msgTypes,
	}.Build()
	File_msg_msg_proto = out.File
	file_msg_msg_proto_goTypes = nil
	file_msg_msg_proto_depIdxs = nil
}
