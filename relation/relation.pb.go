// Copyright Â© 2023 OpenIM. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: relation/relation.proto

package relation

import (
	sdkws "github.com/openimsdk/protocol/sdkws"
	wrapperspb "github.com/openimsdk/protocol/wrapperspb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPaginationFriendsReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination"`
	UserID        string                   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaginationFriendsReq) Reset() {
	*x = GetPaginationFriendsReq{}
	mi := &file_relation_relation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationFriendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsReq) ProtoMessage() {}

func (x *GetPaginationFriendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsReq.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{0}
}

func (x *GetPaginationFriendsReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetPaginationFriendsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetPaginationFriendsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendsInfo   []*sdkws.FriendInfo    `protobuf:"bytes,1,rep,name=friendsInfo,proto3" json:"friendsInfo"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaginationFriendsResp) Reset() {
	*x = GetPaginationFriendsResp{}
	mi := &file_relation_relation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationFriendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsResp) ProtoMessage() {}

func (x *GetPaginationFriendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsResp.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{1}
}

func (x *GetPaginationFriendsResp) GetFriendsInfo() []*sdkws.FriendInfo {
	if x != nil {
		return x.FriendsInfo
	}
	return nil
}

func (x *GetPaginationFriendsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApplyToAddFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserID    string                 `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID"`
	ToUserID      string                 `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID"`
	ReqMsg        string                 `protobuf:"bytes,3,opt,name=reqMsg,proto3" json:"reqMsg"`
	Ex            string                 `protobuf:"bytes,4,opt,name=ex,proto3" json:"ex"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyToAddFriendReq) Reset() {
	*x = ApplyToAddFriendReq{}
	mi := &file_relation_relation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyToAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyToAddFriendReq) ProtoMessage() {}

func (x *ApplyToAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyToAddFriendReq.ProtoReflect.Descriptor instead.
func (*ApplyToAddFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{2}
}

func (x *ApplyToAddFriendReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *ApplyToAddFriendReq) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

func (x *ApplyToAddFriendReq) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *ApplyToAddFriendReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type ApplyToAddFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyToAddFriendResp) Reset() {
	*x = ApplyToAddFriendResp{}
	mi := &file_relation_relation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyToAddFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyToAddFriendResp) ProtoMessage() {}

func (x *ApplyToAddFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyToAddFriendResp.ProtoReflect.Descriptor instead.
func (*ApplyToAddFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{3}
}

type FriendInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID    string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserID   string                 `protobuf:"bytes,2,opt,name=friendUserID,proto3" json:"friendUserID"`
	FriendNickname string                 `protobuf:"bytes,3,opt,name=friendNickname,proto3" json:"friendNickname"`
	FriendFaceURL  string                 `protobuf:"bytes,4,opt,name=friendFaceURL,proto3" json:"friendFaceURL"`
	Remark         string                 `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
	CreateTime     int64                  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
	AddSource      int32                  `protobuf:"varint,7,opt,name=addSource,proto3" json:"addSource"`
	OperatorUserID string                 `protobuf:"bytes,8,opt,name=operatorUserID,proto3" json:"operatorUserID"`
	Ex             string                 `protobuf:"bytes,9,opt,name=ex,proto3" json:"ex"`
	IsPinned       bool                   `protobuf:"varint,10,opt,name=isPinned,proto3" json:"isPinned"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	mi := &file_relation_relation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{4}
}

func (x *FriendInfo) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *FriendInfo) GetFriendUserID() string {
	if x != nil {
		return x.FriendUserID
	}
	return ""
}

func (x *FriendInfo) GetFriendNickname() string {
	if x != nil {
		return x.FriendNickname
	}
	return ""
}

func (x *FriendInfo) GetFriendFaceURL() string {
	if x != nil {
		return x.FriendFaceURL
	}
	return ""
}

func (x *FriendInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FriendInfo) GetAddSource() int32 {
	if x != nil {
		return x.AddSource
	}
	return 0
}

func (x *FriendInfo) GetOperatorUserID() string {
	if x != nil {
		return x.OperatorUserID
	}
	return ""
}

func (x *FriendInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *FriendInfo) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

type ImportFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserIDs []string               `protobuf:"bytes,2,rep,name=friendUserIDs,proto3" json:"friendUserIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportFriendReq) Reset() {
	*x = ImportFriendReq{}
	mi := &file_relation_relation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportFriendReq) ProtoMessage() {}

func (x *ImportFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportFriendReq.ProtoReflect.Descriptor instead.
func (*ImportFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{5}
}

func (x *ImportFriendReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *ImportFriendReq) GetFriendUserIDs() []string {
	if x != nil {
		return x.FriendUserIDs
	}
	return nil
}

type ImportFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportFriendResp) Reset() {
	*x = ImportFriendResp{}
	mi := &file_relation_relation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportFriendResp) ProtoMessage() {}

func (x *ImportFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportFriendResp.ProtoReflect.Descriptor instead.
func (*ImportFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{6}
}

type GetPaginationFriendsApplyToReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserID        string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	HandleResults []int32                  `protobuf:"varint,3,rep,packed,name=handleResults,proto3" json:"handleResults"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaginationFriendsApplyToReq) Reset() {
	*x = GetPaginationFriendsApplyToReq{}
	mi := &file_relation_relation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationFriendsApplyToReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsApplyToReq) ProtoMessage() {}

func (x *GetPaginationFriendsApplyToReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsApplyToReq.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsApplyToReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{7}
}

func (x *GetPaginationFriendsApplyToReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetPaginationFriendsApplyToReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetPaginationFriendsApplyToReq) GetHandleResults() []int32 {
	if x != nil {
		return x.HandleResults
	}
	return nil
}

type GetPaginationFriendsApplyToResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FriendRequests []*sdkws.FriendRequest `protobuf:"bytes,1,rep,name=FriendRequests,proto3" json:"FriendRequests"`
	Total          int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPaginationFriendsApplyToResp) Reset() {
	*x = GetPaginationFriendsApplyToResp{}
	mi := &file_relation_relation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationFriendsApplyToResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsApplyToResp) ProtoMessage() {}

func (x *GetPaginationFriendsApplyToResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsApplyToResp.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsApplyToResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{8}
}

func (x *GetPaginationFriendsApplyToResp) GetFriendRequests() []*sdkws.FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

func (x *GetPaginationFriendsApplyToResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetDesignatedFriendsApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserID    string                 `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID"`
	ToUserID      string                 `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDesignatedFriendsApplyReq) Reset() {
	*x = GetDesignatedFriendsApplyReq{}
	mi := &file_relation_relation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDesignatedFriendsApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignatedFriendsApplyReq) ProtoMessage() {}

func (x *GetDesignatedFriendsApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignatedFriendsApplyReq.ProtoReflect.Descriptor instead.
func (*GetDesignatedFriendsApplyReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{9}
}

func (x *GetDesignatedFriendsApplyReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *GetDesignatedFriendsApplyReq) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

type GetDesignatedFriendsApplyResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FriendRequests []*sdkws.FriendRequest `protobuf:"bytes,1,rep,name=friendRequests,proto3" json:"friendRequests"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetDesignatedFriendsApplyResp) Reset() {
	*x = GetDesignatedFriendsApplyResp{}
	mi := &file_relation_relation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDesignatedFriendsApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignatedFriendsApplyResp) ProtoMessage() {}

func (x *GetDesignatedFriendsApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignatedFriendsApplyResp.ProtoReflect.Descriptor instead.
func (*GetDesignatedFriendsApplyResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{10}
}

func (x *GetDesignatedFriendsApplyResp) GetFriendRequests() []*sdkws.FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

type GetSelfUnhandledApplyCountReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Time          int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelfUnhandledApplyCountReq) Reset() {
	*x = GetSelfUnhandledApplyCountReq{}
	mi := &file_relation_relation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelfUnhandledApplyCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfUnhandledApplyCountReq) ProtoMessage() {}

func (x *GetSelfUnhandledApplyCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfUnhandledApplyCountReq.ProtoReflect.Descriptor instead.
func (*GetSelfUnhandledApplyCountReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{11}
}

func (x *GetSelfUnhandledApplyCountReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetSelfUnhandledApplyCountReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetSelfUnhandledApplyCountResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelfUnhandledApplyCountResp) Reset() {
	*x = GetSelfUnhandledApplyCountResp{}
	mi := &file_relation_relation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelfUnhandledApplyCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfUnhandledApplyCountResp) ProtoMessage() {}

func (x *GetSelfUnhandledApplyCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfUnhandledApplyCountResp.ProtoReflect.Descriptor instead.
func (*GetSelfUnhandledApplyCountResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{12}
}

func (x *GetSelfUnhandledApplyCountResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetIncrementalFriendsApplyToReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalFriendsApplyToReq) Reset() {
	*x = GetIncrementalFriendsApplyToReq{}
	mi := &file_relation_relation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalFriendsApplyToReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalFriendsApplyToReq) ProtoMessage() {}

func (x *GetIncrementalFriendsApplyToReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalFriendsApplyToReq.ProtoReflect.Descriptor instead.
func (*GetIncrementalFriendsApplyToReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{13}
}

func (x *GetIncrementalFriendsApplyToReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIncrementalFriendsApplyToReq) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalFriendsApplyToReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetIncrementalFriendsApplyToResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full"`
	DeleteUserIds []string               `protobuf:"bytes,4,rep,name=deleteUserIds,proto3" json:"deleteUserIds"`
	Changes       []*sdkws.FriendRequest `protobuf:"bytes,5,rep,name=changes,proto3" json:"changes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalFriendsApplyToResp) Reset() {
	*x = GetIncrementalFriendsApplyToResp{}
	mi := &file_relation_relation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalFriendsApplyToResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalFriendsApplyToResp) ProtoMessage() {}

func (x *GetIncrementalFriendsApplyToResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalFriendsApplyToResp.ProtoReflect.Descriptor instead.
func (*GetIncrementalFriendsApplyToResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{14}
}

func (x *GetIncrementalFriendsApplyToResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetIncrementalFriendsApplyToResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalFriendsApplyToResp) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *GetIncrementalFriendsApplyToResp) GetDeleteUserIds() []string {
	if x != nil {
		return x.DeleteUserIds
	}
	return nil
}

func (x *GetIncrementalFriendsApplyToResp) GetChanges() []*sdkws.FriendRequest {
	if x != nil {
		return x.Changes
	}
	return nil
}

type GetIncrementalFriendsApplyFromReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalFriendsApplyFromReq) Reset() {
	*x = GetIncrementalFriendsApplyFromReq{}
	mi := &file_relation_relation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalFriendsApplyFromReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalFriendsApplyFromReq) ProtoMessage() {}

func (x *GetIncrementalFriendsApplyFromReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalFriendsApplyFromReq.ProtoReflect.Descriptor instead.
func (*GetIncrementalFriendsApplyFromReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{15}
}

func (x *GetIncrementalFriendsApplyFromReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIncrementalFriendsApplyFromReq) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalFriendsApplyFromReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetIncrementalFriendsApplyFromResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full"`
	DeleteUserIds []string               `protobuf:"bytes,4,rep,name=deleteUserIds,proto3" json:"deleteUserIds"`
	Changes       []*sdkws.FriendRequest `protobuf:"bytes,5,rep,name=changes,proto3" json:"changes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalFriendsApplyFromResp) Reset() {
	*x = GetIncrementalFriendsApplyFromResp{}
	mi := &file_relation_relation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalFriendsApplyFromResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalFriendsApplyFromResp) ProtoMessage() {}

func (x *GetIncrementalFriendsApplyFromResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalFriendsApplyFromResp.ProtoReflect.Descriptor instead.
func (*GetIncrementalFriendsApplyFromResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{16}
}

func (x *GetIncrementalFriendsApplyFromResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetIncrementalFriendsApplyFromResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalFriendsApplyFromResp) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *GetIncrementalFriendsApplyFromResp) GetDeleteUserIds() []string {
	if x != nil {
		return x.DeleteUserIds
	}
	return nil
}

func (x *GetIncrementalFriendsApplyFromResp) GetChanges() []*sdkws.FriendRequest {
	if x != nil {
		return x.Changes
	}
	return nil
}

type GetDesignatedFriendsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserIDs []string               `protobuf:"bytes,2,rep,name=friendUserIDs,proto3" json:"friendUserIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDesignatedFriendsReq) Reset() {
	*x = GetDesignatedFriendsReq{}
	mi := &file_relation_relation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDesignatedFriendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignatedFriendsReq) ProtoMessage() {}

func (x *GetDesignatedFriendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignatedFriendsReq.ProtoReflect.Descriptor instead.
func (*GetDesignatedFriendsReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{17}
}

func (x *GetDesignatedFriendsReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetDesignatedFriendsReq) GetFriendUserIDs() []string {
	if x != nil {
		return x.FriendUserIDs
	}
	return nil
}

type GetDesignatedFriendsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendsInfo   []*sdkws.FriendInfo    `protobuf:"bytes,1,rep,name=friendsInfo,proto3" json:"friendsInfo"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDesignatedFriendsResp) Reset() {
	*x = GetDesignatedFriendsResp{}
	mi := &file_relation_relation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDesignatedFriendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignatedFriendsResp) ProtoMessage() {}

func (x *GetDesignatedFriendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignatedFriendsResp.ProtoReflect.Descriptor instead.
func (*GetDesignatedFriendsResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{18}
}

func (x *GetDesignatedFriendsResp) GetFriendsInfo() []*sdkws.FriendInfo {
	if x != nil {
		return x.FriendsInfo
	}
	return nil
}

type AddBlackReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	BlackUserID   string                 `protobuf:"bytes,2,opt,name=blackUserID,proto3" json:"blackUserID"`
	Ex            string                 `protobuf:"bytes,3,opt,name=ex,proto3" json:"ex"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBlackReq) Reset() {
	*x = AddBlackReq{}
	mi := &file_relation_relation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackReq) ProtoMessage() {}

func (x *AddBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackReq.ProtoReflect.Descriptor instead.
func (*AddBlackReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{19}
}

func (x *AddBlackReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *AddBlackReq) GetBlackUserID() string {
	if x != nil {
		return x.BlackUserID
	}
	return ""
}

func (x *AddBlackReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type AddBlackResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBlackResp) Reset() {
	*x = AddBlackResp{}
	mi := &file_relation_relation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackResp) ProtoMessage() {}

func (x *AddBlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackResp.ProtoReflect.Descriptor instead.
func (*AddBlackResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{20}
}

type RemoveBlackReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	BlackUserID   string                 `protobuf:"bytes,2,opt,name=blackUserID,proto3" json:"blackUserID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBlackReq) Reset() {
	*x = RemoveBlackReq{}
	mi := &file_relation_relation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackReq) ProtoMessage() {}

func (x *RemoveBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackReq.ProtoReflect.Descriptor instead.
func (*RemoveBlackReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveBlackReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *RemoveBlackReq) GetBlackUserID() string {
	if x != nil {
		return x.BlackUserID
	}
	return ""
}

type RemoveBlackResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBlackResp) Reset() {
	*x = RemoveBlackResp{}
	mi := &file_relation_relation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackResp) ProtoMessage() {}

func (x *RemoveBlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackResp.ProtoReflect.Descriptor instead.
func (*RemoveBlackResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{22}
}

type GetPaginationBlacksReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserID        string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaginationBlacksReq) Reset() {
	*x = GetPaginationBlacksReq{}
	mi := &file_relation_relation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationBlacksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationBlacksReq) ProtoMessage() {}

func (x *GetPaginationBlacksReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationBlacksReq.ProtoReflect.Descriptor instead.
func (*GetPaginationBlacksReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{23}
}

func (x *GetPaginationBlacksReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetPaginationBlacksReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetPaginationBlacksResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blacks        []*sdkws.BlackInfo     `protobuf:"bytes,1,rep,name=blacks,proto3" json:"blacks"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaginationBlacksResp) Reset() {
	*x = GetPaginationBlacksResp{}
	mi := &file_relation_relation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationBlacksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationBlacksResp) ProtoMessage() {}

func (x *GetPaginationBlacksResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationBlacksResp.ProtoReflect.Descriptor instead.
func (*GetPaginationBlacksResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{24}
}

func (x *GetPaginationBlacksResp) GetBlacks() []*sdkws.BlackInfo {
	if x != nil {
		return x.Blacks
	}
	return nil
}

func (x *GetPaginationBlacksResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IsFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID1       string                 `protobuf:"bytes,1,opt,name=userID1,proto3" json:"userID1"`
	UserID2       string                 `protobuf:"bytes,2,opt,name=userID2,proto3" json:"userID2"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsFriendReq) Reset() {
	*x = IsFriendReq{}
	mi := &file_relation_relation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendReq) ProtoMessage() {}

func (x *IsFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendReq.ProtoReflect.Descriptor instead.
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{25}
}

func (x *IsFriendReq) GetUserID1() string {
	if x != nil {
		return x.UserID1
	}
	return ""
}

func (x *IsFriendReq) GetUserID2() string {
	if x != nil {
		return x.UserID2
	}
	return ""
}

type IsFriendResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InUser1Friends bool                   `protobuf:"varint,1,opt,name=inUser1Friends,proto3" json:"inUser1Friends"` // If userID2 is in userID1âs friend list, return true
	InUser2Friends bool                   `protobuf:"varint,2,opt,name=inUser2Friends,proto3" json:"inUser2Friends"` // If userID1 is in userID2âs friend list, return true
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IsFriendResp) Reset() {
	*x = IsFriendResp{}
	mi := &file_relation_relation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendResp) ProtoMessage() {}

func (x *IsFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendResp.ProtoReflect.Descriptor instead.
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{26}
}

func (x *IsFriendResp) GetInUser1Friends() bool {
	if x != nil {
		return x.InUser1Friends
	}
	return false
}

func (x *IsFriendResp) GetInUser2Friends() bool {
	if x != nil {
		return x.InUser2Friends
	}
	return false
}

type IsBlackReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID1       string                 `protobuf:"bytes,1,opt,name=userID1,proto3" json:"userID1"`
	UserID2       string                 `protobuf:"bytes,2,opt,name=userID2,proto3" json:"userID2"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsBlackReq) Reset() {
	*x = IsBlackReq{}
	mi := &file_relation_relation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlackReq) ProtoMessage() {}

func (x *IsBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlackReq.ProtoReflect.Descriptor instead.
func (*IsBlackReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{27}
}

func (x *IsBlackReq) GetUserID1() string {
	if x != nil {
		return x.UserID1
	}
	return ""
}

func (x *IsBlackReq) GetUserID2() string {
	if x != nil {
		return x.UserID2
	}
	return ""
}

type IsBlackResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InUser1Blacks bool                   `protobuf:"varint,1,opt,name=inUser1Blacks,proto3" json:"inUser1Blacks"` // If userID2 is in userID1's blacklist, true
	InUser2Blacks bool                   `protobuf:"varint,2,opt,name=inUser2Blacks,proto3" json:"inUser2Blacks"` // If userID1 is in userID2's blacklist, true
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsBlackResp) Reset() {
	*x = IsBlackResp{}
	mi := &file_relation_relation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsBlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlackResp) ProtoMessage() {}

func (x *IsBlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlackResp.ProtoReflect.Descriptor instead.
func (*IsBlackResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{28}
}

func (x *IsBlackResp) GetInUser1Blacks() bool {
	if x != nil {
		return x.InUser1Blacks
	}
	return false
}

func (x *IsBlackResp) GetInUser2Blacks() bool {
	if x != nil {
		return x.InUser2Blacks
	}
	return false
}

type DeleteFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserID  string                 `protobuf:"bytes,2,opt,name=friendUserID,proto3" json:"friendUserID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	mi := &file_relation_relation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteFriendReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *DeleteFriendReq) GetFriendUserID() string {
	if x != nil {
		return x.FriendUserID
	}
	return ""
}

type DeleteFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendResp) Reset() {
	*x = DeleteFriendResp{}
	mi := &file_relation_relation_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResp) ProtoMessage() {}

func (x *DeleteFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResp.ProtoReflect.Descriptor instead.
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{30}
}

// process
type RespondFriendApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserID    string                 `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID"` // ID of the user initiating the friend request
	ToUserID      string                 `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID"`     // ID of the user receiving the friend request
	HandleResult  int32                  `protobuf:"varint,3,opt,name=handleResult,proto3" json:"handleResult"`
	HandleMsg     string                 `protobuf:"bytes,4,opt,name=handleMsg,proto3" json:"handleMsg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondFriendApplyReq) Reset() {
	*x = RespondFriendApplyReq{}
	mi := &file_relation_relation_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondFriendApplyReq) ProtoMessage() {}

func (x *RespondFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondFriendApplyReq.ProtoReflect.Descriptor instead.
func (*RespondFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{31}
}

func (x *RespondFriendApplyReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *RespondFriendApplyReq) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

func (x *RespondFriendApplyReq) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *RespondFriendApplyReq) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

type RespondFriendApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondFriendApplyResp) Reset() {
	*x = RespondFriendApplyResp{}
	mi := &file_relation_relation_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondFriendApplyResp) ProtoMessage() {}

func (x *RespondFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondFriendApplyResp.ProtoReflect.Descriptor instead.
func (*RespondFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{32}
}

type UpdateFriendsReq struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	OwnerUserID   string                  `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserIDs []string                `protobuf:"bytes,2,rep,name=friendUserIDs,proto3" json:"friendUserIDs"`
	IsPinned      *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=isPinned,proto3" json:"isPinned"`
	Remark        *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark"`
	Ex            *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=ex,proto3" json:"ex"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFriendsReq) Reset() {
	*x = UpdateFriendsReq{}
	mi := &file_relation_relation_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFriendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendsReq) ProtoMessage() {}

func (x *UpdateFriendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendsReq.ProtoReflect.Descriptor instead.
func (*UpdateFriendsReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateFriendsReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *UpdateFriendsReq) GetFriendUserIDs() []string {
	if x != nil {
		return x.FriendUserIDs
	}
	return nil
}

func (x *UpdateFriendsReq) GetIsPinned() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsPinned
	}
	return nil
}

func (x *UpdateFriendsReq) GetRemark() *wrapperspb.StringValue {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *UpdateFriendsReq) GetEx() *wrapperspb.StringValue {
	if x != nil {
		return x.Ex
	}
	return nil
}

type UpdateFriendsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFriendsResp) Reset() {
	*x = UpdateFriendsResp{}
	mi := &file_relation_relation_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFriendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendsResp) ProtoMessage() {}

func (x *UpdateFriendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendsResp.ProtoReflect.Descriptor instead.
func (*UpdateFriendsResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{34}
}

type SetFriendRemarkReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserID  string                 `protobuf:"bytes,2,opt,name=friendUserID,proto3" json:"friendUserID"`
	Remark        string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetFriendRemarkReq) Reset() {
	*x = SetFriendRemarkReq{}
	mi := &file_relation_relation_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetFriendRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkReq) ProtoMessage() {}

func (x *SetFriendRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkReq.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{35}
}

func (x *SetFriendRemarkReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *SetFriendRemarkReq) GetFriendUserID() string {
	if x != nil {
		return x.FriendUserID
	}
	return ""
}

func (x *SetFriendRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SetFriendRemarkResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetFriendRemarkResp) Reset() {
	*x = SetFriendRemarkResp{}
	mi := &file_relation_relation_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetFriendRemarkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkResp) ProtoMessage() {}

func (x *SetFriendRemarkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkResp.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{36}
}

type GetPaginationFriendsApplyFromReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserID        string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	HandleResults []int32                  `protobuf:"varint,3,rep,packed,name=handleResults,proto3" json:"handleResults"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaginationFriendsApplyFromReq) Reset() {
	*x = GetPaginationFriendsApplyFromReq{}
	mi := &file_relation_relation_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationFriendsApplyFromReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsApplyFromReq) ProtoMessage() {}

func (x *GetPaginationFriendsApplyFromReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsApplyFromReq.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsApplyFromReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{37}
}

func (x *GetPaginationFriendsApplyFromReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetPaginationFriendsApplyFromReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetPaginationFriendsApplyFromReq) GetHandleResults() []int32 {
	if x != nil {
		return x.HandleResults
	}
	return nil
}

type GetPaginationFriendsApplyFromResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FriendRequests []*sdkws.FriendRequest `protobuf:"bytes,1,rep,name=friendRequests,proto3" json:"friendRequests"`
	Total          int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPaginationFriendsApplyFromResp) Reset() {
	*x = GetPaginationFriendsApplyFromResp{}
	mi := &file_relation_relation_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaginationFriendsApplyFromResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsApplyFromResp) ProtoMessage() {}

func (x *GetPaginationFriendsApplyFromResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsApplyFromResp.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsApplyFromResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{38}
}

func (x *GetPaginationFriendsApplyFromResp) GetFriendRequests() []*sdkws.FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

func (x *GetPaginationFriendsApplyFromResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetFriendIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendIDsReq) Reset() {
	*x = GetFriendIDsReq{}
	mi := &file_relation_relation_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIDsReq) ProtoMessage() {}

func (x *GetFriendIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIDsReq.ProtoReflect.Descriptor instead.
func (*GetFriendIDsReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{39}
}

func (x *GetFriendIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFriendIDsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendIDs     []string               `protobuf:"bytes,1,rep,name=friendIDs,proto3" json:"friendIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendIDsResp) Reset() {
	*x = GetFriendIDsResp{}
	mi := &file_relation_relation_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIDsResp) ProtoMessage() {}

func (x *GetFriendIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIDsResp.ProtoReflect.Descriptor instead.
func (*GetFriendIDsResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{40}
}

func (x *GetFriendIDsResp) GetFriendIDs() []string {
	if x != nil {
		return x.FriendIDs
	}
	return nil
}

type GetSpecifiedFriendsInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	UserIDList    []string               `protobuf:"bytes,2,rep,name=userIDList,proto3" json:"userIDList"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecifiedFriendsInfoReq) Reset() {
	*x = GetSpecifiedFriendsInfoReq{}
	mi := &file_relation_relation_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecifiedFriendsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedFriendsInfoReq) ProtoMessage() {}

func (x *GetSpecifiedFriendsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedFriendsInfoReq.ProtoReflect.Descriptor instead.
func (*GetSpecifiedFriendsInfoReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{41}
}

func (x *GetSpecifiedFriendsInfoReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetSpecifiedFriendsInfoReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

type GetSpecifiedFriendsInfoInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserInfo      *sdkws.UserInfo        `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo"`
	FriendInfo    *sdkws.FriendInfo      `protobuf:"bytes,2,opt,name=friendInfo,proto3" json:"friendInfo"`
	BlackInfo     *sdkws.BlackInfo       `protobuf:"bytes,3,opt,name=blackInfo,proto3" json:"blackInfo"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecifiedFriendsInfoInfo) Reset() {
	*x = GetSpecifiedFriendsInfoInfo{}
	mi := &file_relation_relation_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecifiedFriendsInfoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedFriendsInfoInfo) ProtoMessage() {}

func (x *GetSpecifiedFriendsInfoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedFriendsInfoInfo.ProtoReflect.Descriptor instead.
func (*GetSpecifiedFriendsInfoInfo) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{42}
}

func (x *GetSpecifiedFriendsInfoInfo) GetUserInfo() *sdkws.UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GetSpecifiedFriendsInfoInfo) GetFriendInfo() *sdkws.FriendInfo {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

func (x *GetSpecifiedFriendsInfoInfo) GetBlackInfo() *sdkws.BlackInfo {
	if x != nil {
		return x.BlackInfo
	}
	return nil
}

type GetSpecifiedFriendsInfoResp struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Infos         []*GetSpecifiedFriendsInfoInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecifiedFriendsInfoResp) Reset() {
	*x = GetSpecifiedFriendsInfoResp{}
	mi := &file_relation_relation_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecifiedFriendsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedFriendsInfoResp) ProtoMessage() {}

func (x *GetSpecifiedFriendsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedFriendsInfoResp.ProtoReflect.Descriptor instead.
func (*GetSpecifiedFriendsInfoResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{43}
}

func (x *GetSpecifiedFriendsInfoResp) GetInfos() []*GetSpecifiedFriendsInfoInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetIncrementalFriendsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalFriendsReq) Reset() {
	*x = GetIncrementalFriendsReq{}
	mi := &file_relation_relation_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalFriendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalFriendsReq) ProtoMessage() {}

func (x *GetIncrementalFriendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalFriendsReq.ProtoReflect.Descriptor instead.
func (*GetIncrementalFriendsReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{44}
}

func (x *GetIncrementalFriendsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIncrementalFriendsReq) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalFriendsReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetIncrementalFriendsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full"`
	Delete        []string               `protobuf:"bytes,4,rep,name=delete,proto3" json:"delete"`
	Insert        []*sdkws.FriendInfo    `protobuf:"bytes,5,rep,name=insert,proto3" json:"insert"`
	Update        []*sdkws.FriendInfo    `protobuf:"bytes,6,rep,name=update,proto3" json:"update"`
	SortVersion   uint64                 `protobuf:"varint,7,opt,name=sortVersion,proto3" json:"sortVersion"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalFriendsResp) Reset() {
	*x = GetIncrementalFriendsResp{}
	mi := &file_relation_relation_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalFriendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalFriendsResp) ProtoMessage() {}

func (x *GetIncrementalFriendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalFriendsResp.ProtoReflect.Descriptor instead.
func (*GetIncrementalFriendsResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{45}
}

func (x *GetIncrementalFriendsResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetIncrementalFriendsResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalFriendsResp) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *GetIncrementalFriendsResp) GetDelete() []string {
	if x != nil {
		return x.Delete
	}
	return nil
}

func (x *GetIncrementalFriendsResp) GetInsert() []*sdkws.FriendInfo {
	if x != nil {
		return x.Insert
	}
	return nil
}

func (x *GetIncrementalFriendsResp) GetUpdate() []*sdkws.FriendInfo {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *GetIncrementalFriendsResp) GetSortVersion() uint64 {
	if x != nil {
		return x.SortVersion
	}
	return 0
}

type GetIncrementalBlacksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalBlacksReq) Reset() {
	*x = GetIncrementalBlacksReq{}
	mi := &file_relation_relation_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalBlacksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalBlacksReq) ProtoMessage() {}

func (x *GetIncrementalBlacksReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalBlacksReq.ProtoReflect.Descriptor instead.
func (*GetIncrementalBlacksReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{46}
}

func (x *GetIncrementalBlacksReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIncrementalBlacksReq) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalBlacksReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetIncrementalBlacksResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full"`
	Delete        []string               `protobuf:"bytes,4,rep,name=delete,proto3" json:"delete"`
	Insert        []*sdkws.BlackInfo     `protobuf:"bytes,5,rep,name=insert,proto3" json:"insert"`
	Update        []*sdkws.BlackInfo     `protobuf:"bytes,6,rep,name=update,proto3" json:"update"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalBlacksResp) Reset() {
	*x = GetIncrementalBlacksResp{}
	mi := &file_relation_relation_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalBlacksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalBlacksResp) ProtoMessage() {}

func (x *GetIncrementalBlacksResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalBlacksResp.ProtoReflect.Descriptor instead.
func (*GetIncrementalBlacksResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{47}
}

func (x *GetIncrementalBlacksResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetIncrementalBlacksResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalBlacksResp) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *GetIncrementalBlacksResp) GetDelete() []string {
	if x != nil {
		return x.Delete
	}
	return nil
}

func (x *GetIncrementalBlacksResp) GetInsert() []*sdkws.BlackInfo {
	if x != nil {
		return x.Insert
	}
	return nil
}

func (x *GetIncrementalBlacksResp) GetUpdate() []*sdkws.BlackInfo {
	if x != nil {
		return x.Update
	}
	return nil
}

type GetSpecifiedBlacksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	UserIDList    []string               `protobuf:"bytes,2,rep,name=userIDList,proto3" json:"userIDList"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecifiedBlacksReq) Reset() {
	*x = GetSpecifiedBlacksReq{}
	mi := &file_relation_relation_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecifiedBlacksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedBlacksReq) ProtoMessage() {}

func (x *GetSpecifiedBlacksReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedBlacksReq.ProtoReflect.Descriptor instead.
func (*GetSpecifiedBlacksReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{48}
}

func (x *GetSpecifiedBlacksReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetSpecifiedBlacksReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

type GetSpecifiedBlacksResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blacks        []*sdkws.BlackInfo     `protobuf:"bytes,1,rep,name=blacks,proto3" json:"blacks"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecifiedBlacksResp) Reset() {
	*x = GetSpecifiedBlacksResp{}
	mi := &file_relation_relation_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecifiedBlacksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecifiedBlacksResp) ProtoMessage() {}

func (x *GetSpecifiedBlacksResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecifiedBlacksResp.ProtoReflect.Descriptor instead.
func (*GetSpecifiedBlacksResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{49}
}

func (x *GetSpecifiedBlacksResp) GetBlacks() []*sdkws.BlackInfo {
	if x != nil {
		return x.Blacks
	}
	return nil
}

func (x *GetSpecifiedBlacksResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetFullFriendUserIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdHash        uint64                 `protobuf:"varint,1,opt,name=idHash,proto3" json:"idHash"`
	UserID        string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFullFriendUserIDsReq) Reset() {
	*x = GetFullFriendUserIDsReq{}
	mi := &file_relation_relation_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFullFriendUserIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullFriendUserIDsReq) ProtoMessage() {}

func (x *GetFullFriendUserIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullFriendUserIDsReq.ProtoReflect.Descriptor instead.
func (*GetFullFriendUserIDsReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{50}
}

func (x *GetFullFriendUserIDsReq) GetIdHash() uint64 {
	if x != nil {
		return x.IdHash
	}
	return 0
}

func (x *GetFullFriendUserIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFullFriendUserIDsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Equal         bool                   `protobuf:"varint,3,opt,name=equal,proto3" json:"equal"`
	UserIDs       []string               `protobuf:"bytes,4,rep,name=userIDs,proto3" json:"userIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFullFriendUserIDsResp) Reset() {
	*x = GetFullFriendUserIDsResp{}
	mi := &file_relation_relation_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFullFriendUserIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullFriendUserIDsResp) ProtoMessage() {}

func (x *GetFullFriendUserIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullFriendUserIDsResp.ProtoReflect.Descriptor instead.
func (*GetFullFriendUserIDsResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{51}
}

func (x *GetFullFriendUserIDsResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetFullFriendUserIDsResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetFullFriendUserIDsResp) GetEqual() bool {
	if x != nil {
		return x.Equal
	}
	return false
}

func (x *GetFullFriendUserIDsResp) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type NotificationUserInfoUpdateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	OldUserInfo   *sdkws.UserInfo        `protobuf:"bytes,2,opt,name=oldUserInfo,proto3" json:"oldUserInfo"`
	NewUserInfo   *sdkws.UserInfo        `protobuf:"bytes,3,opt,name=newUserInfo,proto3" json:"newUserInfo"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationUserInfoUpdateReq) Reset() {
	*x = NotificationUserInfoUpdateReq{}
	mi := &file_relation_relation_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationUserInfoUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUserInfoUpdateReq) ProtoMessage() {}

func (x *NotificationUserInfoUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUserInfoUpdateReq.ProtoReflect.Descriptor instead.
func (*NotificationUserInfoUpdateReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{52}
}

func (x *NotificationUserInfoUpdateReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *NotificationUserInfoUpdateReq) GetOldUserInfo() *sdkws.UserInfo {
	if x != nil {
		return x.OldUserInfo
	}
	return nil
}

func (x *NotificationUserInfoUpdateReq) GetNewUserInfo() *sdkws.UserInfo {
	if x != nil {
		return x.NewUserInfo
	}
	return nil
}

type NotificationUserInfoUpdateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationUserInfoUpdateResp) Reset() {
	*x = NotificationUserInfoUpdateResp{}
	mi := &file_relation_relation_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationUserInfoUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUserInfoUpdateResp) ProtoMessage() {}

func (x *NotificationUserInfoUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUserInfoUpdateResp.ProtoReflect.Descriptor instead.
func (*NotificationUserInfoUpdateResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{53}
}

type FriendInfoOnly struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID    string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserID   string                 `protobuf:"bytes,2,opt,name=friendUserID,proto3" json:"friendUserID"`
	Remark         string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
	CreateTime     int64                  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime"`
	AddSource      int32                  `protobuf:"varint,5,opt,name=addSource,proto3" json:"addSource"`
	OperatorUserID string                 `protobuf:"bytes,6,opt,name=operatorUserID,proto3" json:"operatorUserID"`
	Ex             string                 `protobuf:"bytes,7,opt,name=ex,proto3" json:"ex"`
	IsPinned       bool                   `protobuf:"varint,8,opt,name=isPinned,proto3" json:"isPinned"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FriendInfoOnly) Reset() {
	*x = FriendInfoOnly{}
	mi := &file_relation_relation_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendInfoOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoOnly) ProtoMessage() {}

func (x *FriendInfoOnly) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoOnly.ProtoReflect.Descriptor instead.
func (*FriendInfoOnly) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{54}
}

func (x *FriendInfoOnly) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *FriendInfoOnly) GetFriendUserID() string {
	if x != nil {
		return x.FriendUserID
	}
	return ""
}

func (x *FriendInfoOnly) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendInfoOnly) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FriendInfoOnly) GetAddSource() int32 {
	if x != nil {
		return x.AddSource
	}
	return 0
}

func (x *FriendInfoOnly) GetOperatorUserID() string {
	if x != nil {
		return x.OperatorUserID
	}
	return ""
}

func (x *FriendInfoOnly) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *FriendInfoOnly) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

type GetFriendInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	FriendUserIDs []string               `protobuf:"bytes,2,rep,name=friendUserIDs,proto3" json:"friendUserIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendInfoReq) Reset() {
	*x = GetFriendInfoReq{}
	mi := &file_relation_relation_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoReq) ProtoMessage() {}

func (x *GetFriendInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoReq.ProtoReflect.Descriptor instead.
func (*GetFriendInfoReq) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{55}
}

func (x *GetFriendInfoReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetFriendInfoReq) GetFriendUserIDs() []string {
	if x != nil {
		return x.FriendUserIDs
	}
	return nil
}

type GetFriendInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendInfos   []*FriendInfoOnly      `protobuf:"bytes,1,rep,name=friendInfos,proto3" json:"friendInfos"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendInfoResp) Reset() {
	*x = GetFriendInfoResp{}
	mi := &file_relation_relation_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoResp) ProtoMessage() {}

func (x *GetFriendInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_relation_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoResp.ProtoReflect.Descriptor instead.
func (*GetFriendInfoResp) Descriptor() ([]byte, []int) {
	return file_relation_relation_proto_rawDescGZIP(), []int{56}
}

func (x *GetFriendInfoResp) GetFriendInfos() []*FriendInfoOnly {
	if x != nil {
		return x.FriendInfos
	}
	return nil
}

var File_relation_relation_proto protoreflect.FileDescriptor

const file_relation_relation_proto_rawDesc = "" +
	"\n" +
	"\x17relation/relation.proto\x12\x0fopenim.relation\x1a\x11sdkws/sdkws.proto\x1a\x1bwrapperspb/wrapperspb.proto\"r\n" +
	"\x17getPaginationFriendsReq\x12?\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\"l\n" +
	"\x18getPaginationFriendsResp\x12:\n" +
	"\vfriendsInfo\x18\x01 \x03(\v2\x18.openim.sdkws.FriendInfoR\vfriendsInfo\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"y\n" +
	"\x13applyToAddFriendReq\x12\x1e\n" +
	"\n" +
	"fromUserID\x18\x01 \x01(\tR\n" +
	"fromUserID\x12\x1a\n" +
	"\btoUserID\x18\x02 \x01(\tR\btoUserID\x12\x16\n" +
	"\x06reqMsg\x18\x03 \x01(\tR\x06reqMsg\x12\x0e\n" +
	"\x02ex\x18\x04 \x01(\tR\x02ex\"\x16\n" +
	"\x14applyToAddFriendResp\"\xca\x02\n" +
	"\n" +
	"friendInfo\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\"\n" +
	"\ffriendUserID\x18\x02 \x01(\tR\ffriendUserID\x12&\n" +
	"\x0efriendNickname\x18\x03 \x01(\tR\x0efriendNickname\x12$\n" +
	"\rfriendFaceURL\x18\x04 \x01(\tR\rfriendFaceURL\x12\x16\n" +
	"\x06remark\x18\x05 \x01(\tR\x06remark\x12\x1e\n" +
	"\n" +
	"createTime\x18\x06 \x01(\x03R\n" +
	"createTime\x12\x1c\n" +
	"\taddSource\x18\a \x01(\x05R\taddSource\x12&\n" +
	"\x0eoperatorUserID\x18\b \x01(\tR\x0eoperatorUserID\x12\x0e\n" +
	"\x02ex\x18\t \x01(\tR\x02ex\x12\x1a\n" +
	"\bisPinned\x18\n" +
	" \x01(\bR\bisPinned\"Y\n" +
	"\x0fimportFriendReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12$\n" +
	"\rfriendUserIDs\x18\x02 \x03(\tR\rfriendUserIDs\"\x12\n" +
	"\x10importFriendResp\"\x9f\x01\n" +
	"\x1egetPaginationFriendsApplyToReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12?\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\x12$\n" +
	"\rhandleResults\x18\x03 \x03(\x05R\rhandleResults\"|\n" +
	"\x1fgetPaginationFriendsApplyToResp\x12C\n" +
	"\x0eFriendRequests\x18\x01 \x03(\v2\x1b.openim.sdkws.FriendRequestR\x0eFriendRequests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"Z\n" +
	"\x1cgetDesignatedFriendsApplyReq\x12\x1e\n" +
	"\n" +
	"fromUserID\x18\x01 \x01(\tR\n" +
	"fromUserID\x12\x1a\n" +
	"\btoUserID\x18\x02 \x01(\tR\btoUserID\"d\n" +
	"\x1dgetDesignatedFriendsApplyResp\x12C\n" +
	"\x0efriendRequests\x18\x01 \x03(\v2\x1b.openim.sdkws.FriendRequestR\x0efriendRequests\"K\n" +
	"\x1dgetSelfUnhandledApplyCountReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\"6\n" +
	"\x1egetSelfUnhandledApplyCountResp\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"q\n" +
	"\x1fgetIncrementalFriendsApplyToReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\"\xcb\x01\n" +
	" getIncrementalFriendsApplyToResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\x12$\n" +
	"\rdeleteUserIds\x18\x04 \x03(\tR\rdeleteUserIds\x125\n" +
	"\achanges\x18\x05 \x03(\v2\x1b.openim.sdkws.FriendRequestR\achanges\"s\n" +
	"!getIncrementalFriendsApplyFromReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\"\xcd\x01\n" +
	"\"getIncrementalFriendsApplyFromResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\x12$\n" +
	"\rdeleteUserIds\x18\x04 \x03(\tR\rdeleteUserIds\x125\n" +
	"\achanges\x18\x05 \x03(\v2\x1b.openim.sdkws.FriendRequestR\achanges\"a\n" +
	"\x17getDesignatedFriendsReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12$\n" +
	"\rfriendUserIDs\x18\x02 \x03(\tR\rfriendUserIDs\"V\n" +
	"\x18getDesignatedFriendsResp\x12:\n" +
	"\vfriendsInfo\x18\x01 \x03(\v2\x18.openim.sdkws.FriendInfoR\vfriendsInfo\"a\n" +
	"\vaddBlackReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12 \n" +
	"\vblackUserID\x18\x02 \x01(\tR\vblackUserID\x12\x0e\n" +
	"\x02ex\x18\x03 \x01(\tR\x02ex\"\x0e\n" +
	"\faddBlackResp\"T\n" +
	"\x0eremoveBlackReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12 \n" +
	"\vblackUserID\x18\x02 \x01(\tR\vblackUserID\"\x11\n" +
	"\x0fremoveBlackResp\"q\n" +
	"\x16getPaginationBlacksReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12?\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\"`\n" +
	"\x17getPaginationBlacksResp\x12/\n" +
	"\x06blacks\x18\x01 \x03(\v2\x17.openim.sdkws.BlackInfoR\x06blacks\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"A\n" +
	"\visFriendReq\x12\x18\n" +
	"\auserID1\x18\x01 \x01(\tR\auserID1\x12\x18\n" +
	"\auserID2\x18\x02 \x01(\tR\auserID2\"^\n" +
	"\fisFriendResp\x12&\n" +
	"\x0einUser1Friends\x18\x01 \x01(\bR\x0einUser1Friends\x12&\n" +
	"\x0einUser2Friends\x18\x02 \x01(\bR\x0einUser2Friends\"@\n" +
	"\n" +
	"isBlackReq\x12\x18\n" +
	"\auserID1\x18\x01 \x01(\tR\auserID1\x12\x18\n" +
	"\auserID2\x18\x02 \x01(\tR\auserID2\"Y\n" +
	"\visBlackResp\x12$\n" +
	"\rinUser1Blacks\x18\x01 \x01(\bR\rinUser1Blacks\x12$\n" +
	"\rinUser2Blacks\x18\x02 \x01(\bR\rinUser2Blacks\"W\n" +
	"\x0fdeleteFriendReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\"\n" +
	"\ffriendUserID\x18\x02 \x01(\tR\ffriendUserID\"\x12\n" +
	"\x10deleteFriendResp\"\x95\x01\n" +
	"\x15respondFriendApplyReq\x12\x1e\n" +
	"\n" +
	"fromUserID\x18\x01 \x01(\tR\n" +
	"fromUserID\x12\x1a\n" +
	"\btoUserID\x18\x02 \x01(\tR\btoUserID\x12\"\n" +
	"\fhandleResult\x18\x03 \x01(\x05R\fhandleResult\x12\x1c\n" +
	"\thandleMsg\x18\x04 \x01(\tR\thandleMsg\"\x18\n" +
	"\x16respondFriendApplyResp\"\xf6\x01\n" +
	"\x10updateFriendsReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12$\n" +
	"\rfriendUserIDs\x18\x02 \x03(\tR\rfriendUserIDs\x126\n" +
	"\bisPinned\x18\x03 \x01(\v2\x1a.openim.protobuf.BoolValueR\bisPinned\x124\n" +
	"\x06remark\x18\x04 \x01(\v2\x1c.openim.protobuf.StringValueR\x06remark\x12,\n" +
	"\x02ex\x18\x05 \x01(\v2\x1c.openim.protobuf.StringValueR\x02ex\"\x13\n" +
	"\x11updateFriendsResp\"r\n" +
	"\x12setFriendRemarkReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\"\n" +
	"\ffriendUserID\x18\x02 \x01(\tR\ffriendUserID\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\"\x15\n" +
	"\x13setFriendRemarkResp\"\xa1\x01\n" +
	" getPaginationFriendsApplyFromReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12?\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\x12$\n" +
	"\rhandleResults\x18\x03 \x03(\x05R\rhandleResults\"~\n" +
	"!getPaginationFriendsApplyFromResp\x12C\n" +
	"\x0efriendRequests\x18\x01 \x03(\v2\x1b.openim.sdkws.FriendRequestR\x0efriendRequests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\")\n" +
	"\x0fgetFriendIDsReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"0\n" +
	"\x10getFriendIDsResp\x12\x1c\n" +
	"\tfriendIDs\x18\x01 \x03(\tR\tfriendIDs\"^\n" +
	"\x1agetSpecifiedFriendsInfoReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\x1e\n" +
	"\n" +
	"userIDList\x18\x02 \x03(\tR\n" +
	"userIDList\"\xc2\x01\n" +
	"\x1bgetSpecifiedFriendsInfoInfo\x122\n" +
	"\buserInfo\x18\x01 \x01(\v2\x16.openim.sdkws.UserInfoR\buserInfo\x128\n" +
	"\n" +
	"friendInfo\x18\x02 \x01(\v2\x18.openim.sdkws.FriendInfoR\n" +
	"friendInfo\x125\n" +
	"\tblackInfo\x18\x03 \x01(\v2\x17.openim.sdkws.BlackInfoR\tblackInfo\"a\n" +
	"\x1bgetSpecifiedFriendsInfoResp\x12B\n" +
	"\x05infos\x18\x01 \x03(\v2,.openim.relation.getSpecifiedFriendsInfoInfoR\x05infos\"j\n" +
	"\x18getIncrementalFriendsReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\"\x85\x02\n" +
	"\x19getIncrementalFriendsResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\x12\x16\n" +
	"\x06delete\x18\x04 \x03(\tR\x06delete\x120\n" +
	"\x06insert\x18\x05 \x03(\v2\x18.openim.sdkws.FriendInfoR\x06insert\x120\n" +
	"\x06update\x18\x06 \x03(\v2\x18.openim.sdkws.FriendInfoR\x06update\x12 \n" +
	"\vsortVersion\x18\a \x01(\x04R\vsortVersion\"i\n" +
	"\x17getIncrementalBlacksReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\"\xe0\x01\n" +
	"\x18getIncrementalBlacksResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\x12\x16\n" +
	"\x06delete\x18\x04 \x03(\tR\x06delete\x12/\n" +
	"\x06insert\x18\x05 \x03(\v2\x17.openim.sdkws.BlackInfoR\x06insert\x12/\n" +
	"\x06update\x18\x06 \x03(\v2\x17.openim.sdkws.BlackInfoR\x06update\"Y\n" +
	"\x15GetSpecifiedBlacksReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\x1e\n" +
	"\n" +
	"userIDList\x18\x02 \x03(\tR\n" +
	"userIDList\"_\n" +
	"\x16GetSpecifiedBlacksResp\x12/\n" +
	"\x06blacks\x18\x01 \x03(\v2\x17.openim.sdkws.BlackInfoR\x06blacks\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"I\n" +
	"\x17getFullFriendUserIDsReq\x12\x16\n" +
	"\x06idHash\x18\x01 \x01(\x04R\x06idHash\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\"\x82\x01\n" +
	"\x18getFullFriendUserIDsResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x14\n" +
	"\x05equal\x18\x03 \x01(\bR\x05equal\x12\x18\n" +
	"\auserIDs\x18\x04 \x03(\tR\auserIDs\"\xab\x01\n" +
	"\x1dnotificationUserInfoUpdateReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x128\n" +
	"\voldUserInfo\x18\x02 \x01(\v2\x16.openim.sdkws.UserInfoR\voldUserInfo\x128\n" +
	"\vnewUserInfo\x18\x03 \x01(\v2\x16.openim.sdkws.UserInfoR\vnewUserInfo\" \n" +
	"\x1enotificationUserInfoUpdateResp\"\x80\x02\n" +
	"\x0eFriendInfoOnly\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12\"\n" +
	"\ffriendUserID\x18\x02 \x01(\tR\ffriendUserID\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12\x1e\n" +
	"\n" +
	"createTime\x18\x04 \x01(\x03R\n" +
	"createTime\x12\x1c\n" +
	"\taddSource\x18\x05 \x01(\x05R\taddSource\x12&\n" +
	"\x0eoperatorUserID\x18\x06 \x01(\tR\x0eoperatorUserID\x12\x0e\n" +
	"\x02ex\x18\a \x01(\tR\x02ex\x12\x1a\n" +
	"\bisPinned\x18\b \x01(\bR\bisPinned\"Z\n" +
	"\x10getFriendInfoReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12$\n" +
	"\rfriendUserIDs\x18\x02 \x03(\tR\rfriendUserIDs\"V\n" +
	"\x11getFriendInfoResp\x12A\n" +
	"\vfriendInfos\x18\x01 \x03(\v2\x1f.openim.relation.FriendInfoOnlyR\vfriendInfos2\x8b\x16\n" +
	"\x06friend\x12_\n" +
	"\x10applyToAddFriend\x12$.openim.relation.applyToAddFriendReq\x1a%.openim.relation.applyToAddFriendResp\x12\x80\x01\n" +
	"\x1bgetPaginationFriendsApplyTo\x12/.openim.relation.getPaginationFriendsApplyToReq\x1a0.openim.relation.getPaginationFriendsApplyToResp\x12\x86\x01\n" +
	"\x1dgetPaginationFriendsApplyFrom\x121.openim.relation.getPaginationFriendsApplyFromReq\x1a2.openim.relation.getPaginationFriendsApplyFromResp\x12}\n" +
	"\x1agetSelfUnhandledApplyCount\x12..openim.relation.getSelfUnhandledApplyCountReq\x1a/.openim.relation.getSelfUnhandledApplyCountResp\x12z\n" +
	"\x19getDesignatedFriendsApply\x12-.openim.relation.getDesignatedFriendsApplyReq\x1a..openim.relation.getDesignatedFriendsApplyResp\x12\x83\x01\n" +
	"\x1cgetIncrementalFriendsApplyTo\x120.openim.relation.getIncrementalFriendsApplyToReq\x1a1.openim.relation.getIncrementalFriendsApplyToResp\x12\x89\x01\n" +
	"\x1egetIncrementalFriendsApplyFrom\x122.openim.relation.getIncrementalFriendsApplyFromReq\x1a3.openim.relation.getIncrementalFriendsApplyFromResp\x12G\n" +
	"\baddBlack\x12\x1c.openim.relation.addBlackReq\x1a\x1d.openim.relation.addBlackResp\x12P\n" +
	"\vremoveBlack\x12\x1f.openim.relation.removeBlackReq\x1a .openim.relation.removeBlackResp\x12G\n" +
	"\bisFriend\x12\x1c.openim.relation.isFriendReq\x1a\x1d.openim.relation.isFriendResp\x12D\n" +
	"\aisBlack\x12\x1b.openim.relation.isBlackReq\x1a\x1c.openim.relation.isBlackResp\x12h\n" +
	"\x13getPaginationBlacks\x12'.openim.relation.getPaginationBlacksReq\x1a(.openim.relation.getPaginationBlacksResp\x12e\n" +
	"\x12GetSpecifiedBlacks\x12&.openim.relation.GetSpecifiedBlacksReq\x1a'.openim.relation.GetSpecifiedBlacksResp\x12S\n" +
	"\fdeleteFriend\x12 .openim.relation.deleteFriendReq\x1a!.openim.relation.deleteFriendResp\x12e\n" +
	"\x12respondFriendApply\x12&.openim.relation.respondFriendApplyReq\x1a'.openim.relation.respondFriendApplyResp\x12V\n" +
	"\rupdateFriends\x12!.openim.relation.updateFriendsReq\x1a\".openim.relation.updateFriendsResp\x12\\\n" +
	"\x0fsetFriendRemark\x12#.openim.relation.setFriendRemarkReq\x1a$.openim.relation.setFriendRemarkResp\x12T\n" +
	"\rimportFriends\x12 .openim.relation.importFriendReq\x1a!.openim.relation.importFriendResp\x12k\n" +
	"\x14getDesignatedFriends\x12(.openim.relation.getDesignatedFriendsReq\x1a).openim.relation.getDesignatedFriendsResp\x12k\n" +
	"\x14getPaginationFriends\x12(.openim.relation.getPaginationFriendsReq\x1a).openim.relation.getPaginationFriendsResp\x12S\n" +
	"\fgetFriendIDs\x12 .openim.relation.getFriendIDsReq\x1a!.openim.relation.getFriendIDsResp\x12t\n" +
	"\x17GetSpecifiedFriendsInfo\x12+.openim.relation.getSpecifiedFriendsInfoReq\x1a,.openim.relation.getSpecifiedFriendsInfoResp\x12n\n" +
	"\x15getIncrementalFriends\x12).openim.relation.getIncrementalFriendsReq\x1a*.openim.relation.getIncrementalFriendsResp\x12k\n" +
	"\x14getIncrementalBlacks\x12(.openim.relation.getIncrementalBlacksReq\x1a).openim.relation.getIncrementalBlacksResp\x12k\n" +
	"\x14getFullFriendUserIDs\x12(.openim.relation.getFullFriendUserIDsReq\x1a).openim.relation.getFullFriendUserIDsResp\x12}\n" +
	"\x1aNotificationUserInfoUpdate\x12..openim.relation.notificationUserInfoUpdateReq\x1a/.openim.relation.notificationUserInfoUpdateResp\x12V\n" +
	"\rgetFriendInfo\x12!.openim.relation.getFriendInfoReq\x1a\".openim.relation.getFriendInfoRespB(Z&github.com/openimsdk/protocol/relationb\x06proto3"

var (
	file_relation_relation_proto_rawDescOnce sync.Once
	file_relation_relation_proto_rawDescData []byte
)

func file_relation_relation_proto_rawDescGZIP() []byte {
	file_relation_relation_proto_rawDescOnce.Do(func() {
		file_relation_relation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_relation_relation_proto_rawDesc), len(file_relation_relation_proto_rawDesc)))
	})
	return file_relation_relation_proto_rawDescData
}

var file_relation_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_relation_relation_proto_goTypes = []any{
	(*GetPaginationFriendsReq)(nil),            // 0: openim.relation.getPaginationFriendsReq
	(*GetPaginationFriendsResp)(nil),           // 1: openim.relation.getPaginationFriendsResp
	(*ApplyToAddFriendReq)(nil),                // 2: openim.relation.applyToAddFriendReq
	(*ApplyToAddFriendResp)(nil),               // 3: openim.relation.applyToAddFriendResp
	(*FriendInfo)(nil),                         // 4: openim.relation.friendInfo
	(*ImportFriendReq)(nil),                    // 5: openim.relation.importFriendReq
	(*ImportFriendResp)(nil),                   // 6: openim.relation.importFriendResp
	(*GetPaginationFriendsApplyToReq)(nil),     // 7: openim.relation.getPaginationFriendsApplyToReq
	(*GetPaginationFriendsApplyToResp)(nil),    // 8: openim.relation.getPaginationFriendsApplyToResp
	(*GetDesignatedFriendsApplyReq)(nil),       // 9: openim.relation.getDesignatedFriendsApplyReq
	(*GetDesignatedFriendsApplyResp)(nil),      // 10: openim.relation.getDesignatedFriendsApplyResp
	(*GetSelfUnhandledApplyCountReq)(nil),      // 11: openim.relation.getSelfUnhandledApplyCountReq
	(*GetSelfUnhandledApplyCountResp)(nil),     // 12: openim.relation.getSelfUnhandledApplyCountResp
	(*GetIncrementalFriendsApplyToReq)(nil),    // 13: openim.relation.getIncrementalFriendsApplyToReq
	(*GetIncrementalFriendsApplyToResp)(nil),   // 14: openim.relation.getIncrementalFriendsApplyToResp
	(*GetIncrementalFriendsApplyFromReq)(nil),  // 15: openim.relation.getIncrementalFriendsApplyFromReq
	(*GetIncrementalFriendsApplyFromResp)(nil), // 16: openim.relation.getIncrementalFriendsApplyFromResp
	(*GetDesignatedFriendsReq)(nil),            // 17: openim.relation.getDesignatedFriendsReq
	(*GetDesignatedFriendsResp)(nil),           // 18: openim.relation.getDesignatedFriendsResp
	(*AddBlackReq)(nil),                        // 19: openim.relation.addBlackReq
	(*AddBlackResp)(nil),                       // 20: openim.relation.addBlackResp
	(*RemoveBlackReq)(nil),                     // 21: openim.relation.removeBlackReq
	(*RemoveBlackResp)(nil),                    // 22: openim.relation.removeBlackResp
	(*GetPaginationBlacksReq)(nil),             // 23: openim.relation.getPaginationBlacksReq
	(*GetPaginationBlacksResp)(nil),            // 24: openim.relation.getPaginationBlacksResp
	(*IsFriendReq)(nil),                        // 25: openim.relation.isFriendReq
	(*IsFriendResp)(nil),                       // 26: openim.relation.isFriendResp
	(*IsBlackReq)(nil),                         // 27: openim.relation.isBlackReq
	(*IsBlackResp)(nil),                        // 28: openim.relation.isBlackResp
	(*DeleteFriendReq)(nil),                    // 29: openim.relation.deleteFriendReq
	(*DeleteFriendResp)(nil),                   // 30: openim.relation.deleteFriendResp
	(*RespondFriendApplyReq)(nil),              // 31: openim.relation.respondFriendApplyReq
	(*RespondFriendApplyResp)(nil),             // 32: openim.relation.respondFriendApplyResp
	(*UpdateFriendsReq)(nil),                   // 33: openim.relation.updateFriendsReq
	(*UpdateFriendsResp)(nil),                  // 34: openim.relation.updateFriendsResp
	(*SetFriendRemarkReq)(nil),                 // 35: openim.relation.setFriendRemarkReq
	(*SetFriendRemarkResp)(nil),                // 36: openim.relation.setFriendRemarkResp
	(*GetPaginationFriendsApplyFromReq)(nil),   // 37: openim.relation.getPaginationFriendsApplyFromReq
	(*GetPaginationFriendsApplyFromResp)(nil),  // 38: openim.relation.getPaginationFriendsApplyFromResp
	(*GetFriendIDsReq)(nil),                    // 39: openim.relation.getFriendIDsReq
	(*GetFriendIDsResp)(nil),                   // 40: openim.relation.getFriendIDsResp
	(*GetSpecifiedFriendsInfoReq)(nil),         // 41: openim.relation.getSpecifiedFriendsInfoReq
	(*GetSpecifiedFriendsInfoInfo)(nil),        // 42: openim.relation.getSpecifiedFriendsInfoInfo
	(*GetSpecifiedFriendsInfoResp)(nil),        // 43: openim.relation.getSpecifiedFriendsInfoResp
	(*GetIncrementalFriendsReq)(nil),           // 44: openim.relation.getIncrementalFriendsReq
	(*GetIncrementalFriendsResp)(nil),          // 45: openim.relation.getIncrementalFriendsResp
	(*GetIncrementalBlacksReq)(nil),            // 46: openim.relation.getIncrementalBlacksReq
	(*GetIncrementalBlacksResp)(nil),           // 47: openim.relation.getIncrementalBlacksResp
	(*GetSpecifiedBlacksReq)(nil),              // 48: openim.relation.GetSpecifiedBlacksReq
	(*GetSpecifiedBlacksResp)(nil),             // 49: openim.relation.GetSpecifiedBlacksResp
	(*GetFullFriendUserIDsReq)(nil),            // 50: openim.relation.getFullFriendUserIDsReq
	(*GetFullFriendUserIDsResp)(nil),           // 51: openim.relation.getFullFriendUserIDsResp
	(*NotificationUserInfoUpdateReq)(nil),      // 52: openim.relation.notificationUserInfoUpdateReq
	(*NotificationUserInfoUpdateResp)(nil),     // 53: openim.relation.notificationUserInfoUpdateResp
	(*FriendInfoOnly)(nil),                     // 54: openim.relation.FriendInfoOnly
	(*GetFriendInfoReq)(nil),                   // 55: openim.relation.getFriendInfoReq
	(*GetFriendInfoResp)(nil),                  // 56: openim.relation.getFriendInfoResp
	(*sdkws.RequestPagination)(nil),            // 57: openim.sdkws.RequestPagination
	(*sdkws.FriendInfo)(nil),                   // 58: openim.sdkws.FriendInfo
	(*sdkws.FriendRequest)(nil),                // 59: openim.sdkws.FriendRequest
	(*sdkws.BlackInfo)(nil),                    // 60: openim.sdkws.BlackInfo
	(*wrapperspb.BoolValue)(nil),               // 61: openim.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil),             // 62: openim.protobuf.StringValue
	(*sdkws.UserInfo)(nil),                     // 63: openim.sdkws.UserInfo
}
var file_relation_relation_proto_depIdxs = []int32{
	57, // 0: openim.relation.getPaginationFriendsReq.pagination:type_name -> openim.sdkws.RequestPagination
	58, // 1: openim.relation.getPaginationFriendsResp.friendsInfo:type_name -> openim.sdkws.FriendInfo
	57, // 2: openim.relation.getPaginationFriendsApplyToReq.pagination:type_name -> openim.sdkws.RequestPagination
	59, // 3: openim.relation.getPaginationFriendsApplyToResp.FriendRequests:type_name -> openim.sdkws.FriendRequest
	59, // 4: openim.relation.getDesignatedFriendsApplyResp.friendRequests:type_name -> openim.sdkws.FriendRequest
	59, // 5: openim.relation.getIncrementalFriendsApplyToResp.changes:type_name -> openim.sdkws.FriendRequest
	59, // 6: openim.relation.getIncrementalFriendsApplyFromResp.changes:type_name -> openim.sdkws.FriendRequest
	58, // 7: openim.relation.getDesignatedFriendsResp.friendsInfo:type_name -> openim.sdkws.FriendInfo
	57, // 8: openim.relation.getPaginationBlacksReq.pagination:type_name -> openim.sdkws.RequestPagination
	60, // 9: openim.relation.getPaginationBlacksResp.blacks:type_name -> openim.sdkws.BlackInfo
	61, // 10: openim.relation.updateFriendsReq.isPinned:type_name -> openim.protobuf.BoolValue
	62, // 11: openim.relation.updateFriendsReq.remark:type_name -> openim.protobuf.StringValue
	62, // 12: openim.relation.updateFriendsReq.ex:type_name -> openim.protobuf.StringValue
	57, // 13: openim.relation.getPaginationFriendsApplyFromReq.pagination:type_name -> openim.sdkws.RequestPagination
	59, // 14: openim.relation.getPaginationFriendsApplyFromResp.friendRequests:type_name -> openim.sdkws.FriendRequest
	63, // 15: openim.relation.getSpecifiedFriendsInfoInfo.userInfo:type_name -> openim.sdkws.UserInfo
	58, // 16: openim.relation.getSpecifiedFriendsInfoInfo.friendInfo:type_name -> openim.sdkws.FriendInfo
	60, // 17: openim.relation.getSpecifiedFriendsInfoInfo.blackInfo:type_name -> openim.sdkws.BlackInfo
	42, // 18: openim.relation.getSpecifiedFriendsInfoResp.infos:type_name -> openim.relation.getSpecifiedFriendsInfoInfo
	58, // 19: openim.relation.getIncrementalFriendsResp.insert:type_name -> openim.sdkws.FriendInfo
	58, // 20: openim.relation.getIncrementalFriendsResp.update:type_name -> openim.sdkws.FriendInfo
	60, // 21: openim.relation.getIncrementalBlacksResp.insert:type_name -> openim.sdkws.BlackInfo
	60, // 22: openim.relation.getIncrementalBlacksResp.update:type_name -> openim.sdkws.BlackInfo
	60, // 23: openim.relation.GetSpecifiedBlacksResp.blacks:type_name -> openim.sdkws.BlackInfo
	63, // 24: openim.relation.notificationUserInfoUpdateReq.oldUserInfo:type_name -> openim.sdkws.UserInfo
	63, // 25: openim.relation.notificationUserInfoUpdateReq.newUserInfo:type_name -> openim.sdkws.UserInfo
	54, // 26: openim.relation.getFriendInfoResp.friendInfos:type_name -> openim.relation.FriendInfoOnly
	2,  // 27: openim.relation.friend.applyToAddFriend:input_type -> openim.relation.applyToAddFriendReq
	7,  // 28: openim.relation.friend.getPaginationFriendsApplyTo:input_type -> openim.relation.getPaginationFriendsApplyToReq
	37, // 29: openim.relation.friend.getPaginationFriendsApplyFrom:input_type -> openim.relation.getPaginationFriendsApplyFromReq
	11, // 30: openim.relation.friend.getSelfUnhandledApplyCount:input_type -> openim.relation.getSelfUnhandledApplyCountReq
	9,  // 31: openim.relation.friend.getDesignatedFriendsApply:input_type -> openim.relation.getDesignatedFriendsApplyReq
	13, // 32: openim.relation.friend.getIncrementalFriendsApplyTo:input_type -> openim.relation.getIncrementalFriendsApplyToReq
	15, // 33: openim.relation.friend.getIncrementalFriendsApplyFrom:input_type -> openim.relation.getIncrementalFriendsApplyFromReq
	19, // 34: openim.relation.friend.addBlack:input_type -> openim.relation.addBlackReq
	21, // 35: openim.relation.friend.removeBlack:input_type -> openim.relation.removeBlackReq
	25, // 36: openim.relation.friend.isFriend:input_type -> openim.relation.isFriendReq
	27, // 37: openim.relation.friend.isBlack:input_type -> openim.relation.isBlackReq
	23, // 38: openim.relation.friend.getPaginationBlacks:input_type -> openim.relation.getPaginationBlacksReq
	48, // 39: openim.relation.friend.GetSpecifiedBlacks:input_type -> openim.relation.GetSpecifiedBlacksReq
	29, // 40: openim.relation.friend.deleteFriend:input_type -> openim.relation.deleteFriendReq
	31, // 41: openim.relation.friend.respondFriendApply:input_type -> openim.relation.respondFriendApplyReq
	33, // 42: openim.relation.friend.updateFriends:input_type -> openim.relation.updateFriendsReq
	35, // 43: openim.relation.friend.setFriendRemark:input_type -> openim.relation.setFriendRemarkReq
	5,  // 44: openim.relation.friend.importFriends:input_type -> openim.relation.importFriendReq
	17, // 45: openim.relation.friend.getDesignatedFriends:input_type -> openim.relation.getDesignatedFriendsReq
	0,  // 46: openim.relation.friend.getPaginationFriends:input_type -> openim.relation.getPaginationFriendsReq
	39, // 47: openim.relation.friend.getFriendIDs:input_type -> openim.relation.getFriendIDsReq
	41, // 48: openim.relation.friend.GetSpecifiedFriendsInfo:input_type -> openim.relation.getSpecifiedFriendsInfoReq
	44, // 49: openim.relation.friend.getIncrementalFriends:input_type -> openim.relation.getIncrementalFriendsReq
	46, // 50: openim.relation.friend.getIncrementalBlacks:input_type -> openim.relation.getIncrementalBlacksReq
	50, // 51: openim.relation.friend.getFullFriendUserIDs:input_type -> openim.relation.getFullFriendUserIDsReq
	52, // 52: openim.relation.friend.NotificationUserInfoUpdate:input_type -> openim.relation.notificationUserInfoUpdateReq
	55, // 53: openim.relation.friend.getFriendInfo:input_type -> openim.relation.getFriendInfoReq
	3,  // 54: openim.relation.friend.applyToAddFriend:output_type -> openim.relation.applyToAddFriendResp
	8,  // 55: openim.relation.friend.getPaginationFriendsApplyTo:output_type -> openim.relation.getPaginationFriendsApplyToResp
	38, // 56: openim.relation.friend.getPaginationFriendsApplyFrom:output_type -> openim.relation.getPaginationFriendsApplyFromResp
	12, // 57: openim.relation.friend.getSelfUnhandledApplyCount:output_type -> openim.relation.getSelfUnhandledApplyCountResp
	10, // 58: openim.relation.friend.getDesignatedFriendsApply:output_type -> openim.relation.getDesignatedFriendsApplyResp
	14, // 59: openim.relation.friend.getIncrementalFriendsApplyTo:output_type -> openim.relation.getIncrementalFriendsApplyToResp
	16, // 60: openim.relation.friend.getIncrementalFriendsApplyFrom:output_type -> openim.relation.getIncrementalFriendsApplyFromResp
	20, // 61: openim.relation.friend.addBlack:output_type -> openim.relation.addBlackResp
	22, // 62: openim.relation.friend.removeBlack:output_type -> openim.relation.removeBlackResp
	26, // 63: openim.relation.friend.isFriend:output_type -> openim.relation.isFriendResp
	28, // 64: openim.relation.friend.isBlack:output_type -> openim.relation.isBlackResp
	24, // 65: openim.relation.friend.getPaginationBlacks:output_type -> openim.relation.getPaginationBlacksResp
	49, // 66: openim.relation.friend.GetSpecifiedBlacks:output_type -> openim.relation.GetSpecifiedBlacksResp
	30, // 67: openim.relation.friend.deleteFriend:output_type -> openim.relation.deleteFriendResp
	32, // 68: openim.relation.friend.respondFriendApply:output_type -> openim.relation.respondFriendApplyResp
	34, // 69: openim.relation.friend.updateFriends:output_type -> openim.relation.updateFriendsResp
	36, // 70: openim.relation.friend.setFriendRemark:output_type -> openim.relation.setFriendRemarkResp
	6,  // 71: openim.relation.friend.importFriends:output_type -> openim.relation.importFriendResp
	18, // 72: openim.relation.friend.getDesignatedFriends:output_type -> openim.relation.getDesignatedFriendsResp
	1,  // 73: openim.relation.friend.getPaginationFriends:output_type -> openim.relation.getPaginationFriendsResp
	40, // 74: openim.relation.friend.getFriendIDs:output_type -> openim.relation.getFriendIDsResp
	43, // 75: openim.relation.friend.GetSpecifiedFriendsInfo:output_type -> openim.relation.getSpecifiedFriendsInfoResp
	45, // 76: openim.relation.friend.getIncrementalFriends:output_type -> openim.relation.getIncrementalFriendsResp
	47, // 77: openim.relation.friend.getIncrementalBlacks:output_type -> openim.relation.getIncrementalBlacksResp
	51, // 78: openim.relation.friend.getFullFriendUserIDs:output_type -> openim.relation.getFullFriendUserIDsResp
	53, // 79: openim.relation.friend.NotificationUserInfoUpdate:output_type -> openim.relation.notificationUserInfoUpdateResp
	56, // 80: openim.relation.friend.getFriendInfo:output_type -> openim.relation.getFriendInfoResp
	54, // [54:81] is the sub-list for method output_type
	27, // [27:54] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_relation_relation_proto_init() }
func file_relation_relation_proto_init() {
	if File_relation_relation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_relation_relation_proto_rawDesc), len(file_relation_relation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relation_relation_proto_goTypes,
		DependencyIndexes: file_relation_relation_proto_depIdxs,
		MessageInfos:      file_relation_relation_proto_msgTypes,
	}.Build()
	File_relation_relation_proto = out.File
	file_relation_relation_proto_goTypes = nil
	file_relation_relation_proto_depIdxs = nil
}
